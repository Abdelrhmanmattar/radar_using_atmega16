
timer1.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00001066  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000004  00800060  00001066  000010fa  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          00000011  00800064  00800064  000010fe  2**0
                  ALLOC
  3 .comment      0000005c  00000000  00000000  000010fe  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  0000115c  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 000000d8  00000000  00000000  00001198  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   0000115c  00000000  00000000  00001270  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000931  00000000  00000000  000023cc  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   0000098a  00000000  00000000  00002cfd  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000188  00000000  00000000  00003688  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00000684  00000000  00000000  00003810  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    000005b0  00000000  00000000  00003e94  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 000000a8  00000000  00000000  00004444  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
       4:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
       8:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
       c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      10:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      14:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      18:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      1c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      20:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      24:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      28:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      2c:	0c 94 ea 02 	jmp	0x5d4	; 0x5d4 <__vector_11>
      30:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      34:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      38:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      3c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      40:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      44:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      48:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      4c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      50:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>

00000054 <__ctors_end>:
      54:	11 24       	eor	r1, r1
      56:	1f be       	out	0x3f, r1	; 63
      58:	cf e5       	ldi	r28, 0x5F	; 95
      5a:	d4 e0       	ldi	r29, 0x04	; 4
      5c:	de bf       	out	0x3e, r29	; 62
      5e:	cd bf       	out	0x3d, r28	; 61

00000060 <__do_copy_data>:
      60:	10 e0       	ldi	r17, 0x00	; 0
      62:	a0 e6       	ldi	r26, 0x60	; 96
      64:	b0 e0       	ldi	r27, 0x00	; 0
      66:	e6 e6       	ldi	r30, 0x66	; 102
      68:	f0 e1       	ldi	r31, 0x10	; 16
      6a:	02 c0       	rjmp	.+4      	; 0x70 <__do_copy_data+0x10>
      6c:	05 90       	lpm	r0, Z+
      6e:	0d 92       	st	X+, r0
      70:	a4 36       	cpi	r26, 0x64	; 100
      72:	b1 07       	cpc	r27, r17
      74:	d9 f7       	brne	.-10     	; 0x6c <__do_copy_data+0xc>

00000076 <__do_clear_bss>:
      76:	20 e0       	ldi	r18, 0x00	; 0
      78:	a4 e6       	ldi	r26, 0x64	; 100
      7a:	b0 e0       	ldi	r27, 0x00	; 0
      7c:	01 c0       	rjmp	.+2      	; 0x80 <.do_clear_bss_start>

0000007e <.do_clear_bss_loop>:
      7e:	1d 92       	st	X+, r1

00000080 <.do_clear_bss_start>:
      80:	a5 37       	cpi	r26, 0x75	; 117
      82:	b2 07       	cpc	r27, r18
      84:	e1 f7       	brne	.-8      	; 0x7e <.do_clear_bss_loop>
      86:	0e 94 71 00 	call	0xe2	; 0xe2 <main>
      8a:	0c 94 31 08 	jmp	0x1062	; 0x1062 <_exit>

0000008e <__bad_interrupt>:
      8e:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000092 <servo_int>:
	ICR1=19999;
	SET_BIT(TCCR1B,CS11);
}
void change(int x)
{
	ICR1=x;
      92:	8f b5       	in	r24, 0x2f	; 47
      94:	82 60       	ori	r24, 0x02	; 2
      96:	8f bd       	out	0x2f, r24	; 47
      98:	8e b5       	in	r24, 0x2e	; 46
      9a:	88 60       	ori	r24, 0x08	; 8
      9c:	8e bd       	out	0x2e, r24	; 46
      9e:	8e b5       	in	r24, 0x2e	; 46
      a0:	80 61       	ori	r24, 0x10	; 16
      a2:	8e bd       	out	0x2e, r24	; 46
      a4:	8e b5       	in	r24, 0x2e	; 46
      a6:	8d 7f       	andi	r24, 0xFD	; 253
      a8:	8e bd       	out	0x2e, r24	; 46
      aa:	8f b5       	in	r24, 0x2f	; 47
      ac:	80 68       	ori	r24, 0x80	; 128
      ae:	8f bd       	out	0x2f, r24	; 47
      b0:	08 95       	ret

000000b2 <servo_speed>:
      b2:	20 e0       	ldi	r18, 0x00	; 0
      b4:	30 e0       	ldi	r19, 0x00	; 0
      b6:	40 e3       	ldi	r20, 0x30	; 48
      b8:	51 e4       	ldi	r21, 0x41	; 65
      ba:	0e 94 8c 04 	call	0x918	; 0x918 <__mulsf3>
      be:	20 e0       	ldi	r18, 0x00	; 0
      c0:	30 e0       	ldi	r19, 0x00	; 0
      c2:	4a ef       	ldi	r20, 0xFA	; 250
      c4:	53 e4       	ldi	r21, 0x43	; 67
      c6:	0e 94 63 03 	call	0x6c6	; 0x6c6 <__addsf3>
      ca:	0e 94 cf 03 	call	0x79e	; 0x79e <__fixunssfsi>
      ce:	7b bd       	out	0x2b, r23	; 43
      d0:	6a bd       	out	0x2a, r22	; 42
      d2:	8f e1       	ldi	r24, 0x1F	; 31
      d4:	9e e4       	ldi	r25, 0x4E	; 78
      d6:	97 bd       	out	0x27, r25	; 39
      d8:	86 bd       	out	0x26, r24	; 38
      da:	8e b5       	in	r24, 0x2e	; 46
      dc:	82 60       	ori	r24, 0x02	; 2
      de:	8e bd       	out	0x2e, r24	; 46
      e0:	08 95       	ret

000000e2 <main>:
#include "servo.h"
volatile uint32_t a=0,b=0,c=0,distance;
volatile int8_t x=0;

int main(void)
{
      e2:	cf 93       	push	r28
      e4:	df 93       	push	r29
      e6:	cd b7       	in	r28, 0x3d	; 61
      e8:	de b7       	in	r29, 0x3e	; 62
      ea:	6e 97       	sbiw	r28, 0x1e	; 30
      ec:	0f b6       	in	r0, 0x3f	; 63
      ee:	f8 94       	cli
      f0:	de bf       	out	0x3e, r29	; 62
      f2:	0f be       	out	0x3f, r0	; 63
      f4:	cd bf       	out	0x3d, r28	; 61
	UART_Vinit(9600);
      f6:	80 e8       	ldi	r24, 0x80	; 128
      f8:	95 e2       	ldi	r25, 0x25	; 37
      fa:	0e 94 32 03 	call	0x664	; 0x664 <UART_Vinit>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
      fe:	2f ef       	ldi	r18, 0xFF	; 255
     100:	80 e7       	ldi	r24, 0x70	; 112
     102:	92 e0       	ldi	r25, 0x02	; 2
     104:	21 50       	subi	r18, 0x01	; 1
     106:	80 40       	sbci	r24, 0x00	; 0
     108:	90 40       	sbci	r25, 0x00	; 0
     10a:	e1 f7       	brne	.-8      	; 0x104 <main+0x22>
     10c:	00 c0       	rjmp	.+0      	; 0x10e <main+0x2c>
     10e:	00 00       	nop
	_delay_ms(100);
	sei();
     110:	78 94       	sei
	int16_t i=0;
	
	SET_BIT(DDRD,5);
     112:	81 b3       	in	r24, 0x11	; 17
     114:	80 62       	ori	r24, 0x20	; 32
     116:	81 bb       	out	0x11, r24	; 17
	SET_BIT(DDRB,0);
     118:	87 b3       	in	r24, 0x17	; 23
     11a:	81 60       	ori	r24, 0x01	; 1
     11c:	87 bb       	out	0x17, r24	; 23
	SET_BIT(DDRB,1);
     11e:	87 b3       	in	r24, 0x17	; 23
     120:	82 60       	ori	r24, 0x02	; 2
     122:	87 bb       	out	0x17, r24	; 23
	SET_BIT(DDRB,2);
     124:	87 b3       	in	r24, 0x17	; 23
     126:	84 60       	ori	r24, 0x04	; 4
     128:	87 bb       	out	0x17, r24	; 23
	SET_BIT(DDRD,7);
     12a:	81 b3       	in	r24, 0x11	; 17
     12c:	80 68       	ori	r24, 0x80	; 128
     12e:	81 bb       	out	0x11, r24	; 17
	
	servo_int();
     130:	0e 94 49 00 	call	0x92	; 0x92 <servo_int>
	servo_speed(90);
     134:	60 e0       	ldi	r22, 0x00	; 0
     136:	70 e0       	ldi	r23, 0x00	; 0
     138:	84 eb       	ldi	r24, 0xB4	; 180
     13a:	92 e4       	ldi	r25, 0x42	; 66
     13c:	0e 94 59 00 	call	0xb2	; 0xb2 <servo_speed>
     140:	ef ef       	ldi	r30, 0xFF	; 255
     142:	f9 e6       	ldi	r31, 0x69	; 105
     144:	28 e1       	ldi	r18, 0x18	; 24
     146:	e1 50       	subi	r30, 0x01	; 1
     148:	f0 40       	sbci	r31, 0x00	; 0
     14a:	20 40       	sbci	r18, 0x00	; 0
     14c:	e1 f7       	brne	.-8      	; 0x146 <main+0x64>
     14e:	00 c0       	rjmp	.+0      	; 0x150 <main+0x6e>
     150:	00 00       	nop
	char arr[10];
	char brr[10],cbb[10];	
    while (1) 
    {
		
		distance=0;
     152:	10 92 71 00 	sts	0x0071, r1	; 0x800071 <distance>
     156:	10 92 72 00 	sts	0x0072, r1	; 0x800072 <distance+0x1>
     15a:	10 92 73 00 	sts	0x0073, r1	; 0x800073 <distance+0x2>
     15e:	10 92 74 00 	sts	0x0074, r1	; 0x800074 <distance+0x3>
		for (i=0;i<=175;i+=x)
     162:	00 e0       	ldi	r16, 0x00	; 0
     164:	10 e0       	ldi	r17, 0x00	; 0
     166:	15 c1       	rjmp	.+554    	; 0x392 <__EEPROM_REGION_LENGTH__+0x192>
		{
			servo_int();
     168:	0e 94 49 00 	call	0x92	; 0x92 <servo_int>
			servo_speed(i);
     16c:	b8 01       	movw	r22, r16
     16e:	01 2e       	mov	r0, r17
     170:	00 0c       	add	r0, r0
     172:	88 0b       	sbc	r24, r24
     174:	99 0b       	sbc	r25, r25
     176:	0e 94 00 04 	call	0x800	; 0x800 <__floatsisf>
     17a:	0e 94 59 00 	call	0xb2	; 0xb2 <servo_speed>
     17e:	8f e4       	ldi	r24, 0x4F	; 79
     180:	93 ec       	ldi	r25, 0xC3	; 195
     182:	01 97       	sbiw	r24, 0x01	; 1
     184:	f1 f7       	brne	.-4      	; 0x182 <main+0xa0>
     186:	00 c0       	rjmp	.+0      	; 0x188 <main+0xa6>
     188:	00 00       	nop
			
			_delay_ms(25);		
			//trigger
			ultra_init();
     18a:	0e 94 18 03 	call	0x630	; 0x630 <ultra_init>
			SET_BIT(PORTB,1);
     18e:	88 b3       	in	r24, 0x18	; 24
     190:	82 60       	ori	r24, 0x02	; 2
     192:	88 bb       	out	0x18, r24	; 24
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
     194:	95 e8       	ldi	r25, 0x85	; 133
     196:	9a 95       	dec	r25
     198:	f1 f7       	brne	.-4      	; 0x196 <main+0xb4>
     19a:	00 00       	nop
			_delay_us(50);
			CLR_BIT(PORTB,1);
     19c:	88 b3       	in	r24, 0x18	; 24
     19e:	8d 7f       	andi	r24, 0xFD	; 253
     1a0:	88 bb       	out	0x18, r24	; 24
			TCCR1B = 0;
			
			TOG_BIT(PORTB,0);
			_delay_ms(1000);*/
			
			a=input_capture_rising();
     1a2:	0e 94 0c 03 	call	0x618	; 0x618 <input_capture_rising>
     1a6:	a0 e0       	ldi	r26, 0x00	; 0
     1a8:	b0 e0       	ldi	r27, 0x00	; 0
     1aa:	80 93 6d 00 	sts	0x006D, r24	; 0x80006d <a>
     1ae:	90 93 6e 00 	sts	0x006E, r25	; 0x80006e <a+0x1>
     1b2:	a0 93 6f 00 	sts	0x006F, r26	; 0x80006f <a+0x2>
     1b6:	b0 93 70 00 	sts	0x0070, r27	; 0x800070 <a+0x3>
			b=input_capture_falling();
     1ba:	0e 94 1c 03 	call	0x638	; 0x638 <input_capture_falling>
     1be:	a0 e0       	ldi	r26, 0x00	; 0
     1c0:	b0 e0       	ldi	r27, 0x00	; 0
     1c2:	80 93 69 00 	sts	0x0069, r24	; 0x800069 <b>
     1c6:	90 93 6a 00 	sts	0x006A, r25	; 0x80006a <b+0x1>
     1ca:	a0 93 6b 00 	sts	0x006B, r26	; 0x80006b <b+0x2>
     1ce:	b0 93 6c 00 	sts	0x006C, r27	; 0x80006c <b+0x3>
			STOP_TIMER();
     1d2:	0e 94 2e 03 	call	0x65c	; 0x65c <STOP_TIMER>
	
			c=b-a;
     1d6:	80 91 69 00 	lds	r24, 0x0069	; 0x800069 <b>
     1da:	90 91 6a 00 	lds	r25, 0x006A	; 0x80006a <b+0x1>
     1de:	a0 91 6b 00 	lds	r26, 0x006B	; 0x80006b <b+0x2>
     1e2:	b0 91 6c 00 	lds	r27, 0x006C	; 0x80006c <b+0x3>
     1e6:	40 91 6d 00 	lds	r20, 0x006D	; 0x80006d <a>
     1ea:	50 91 6e 00 	lds	r21, 0x006E	; 0x80006e <a+0x1>
     1ee:	60 91 6f 00 	lds	r22, 0x006F	; 0x80006f <a+0x2>
     1f2:	70 91 70 00 	lds	r23, 0x0070	; 0x800070 <a+0x3>
     1f6:	84 1b       	sub	r24, r20
     1f8:	95 0b       	sbc	r25, r21
     1fa:	a6 0b       	sbc	r26, r22
     1fc:	b7 0b       	sbc	r27, r23
     1fe:	80 93 65 00 	sts	0x0065, r24	; 0x800065 <c>
     202:	90 93 66 00 	sts	0x0066, r25	; 0x800066 <c+0x1>
     206:	a0 93 67 00 	sts	0x0067, r26	; 0x800067 <c+0x2>
     20a:	b0 93 68 00 	sts	0x0068, r27	; 0x800068 <c+0x3>
			distance=((c*34200)/(F_CPU*2));
     20e:	20 91 65 00 	lds	r18, 0x0065	; 0x800065 <c>
     212:	30 91 66 00 	lds	r19, 0x0066	; 0x800066 <c+0x1>
     216:	40 91 67 00 	lds	r20, 0x0067	; 0x800067 <c+0x2>
     21a:	50 91 68 00 	lds	r21, 0x0068	; 0x800068 <c+0x3>
     21e:	a8 e9       	ldi	r26, 0x98	; 152
     220:	b5 e8       	ldi	r27, 0x85	; 133
     222:	0e 94 1b 05 	call	0xa36	; 0xa36 <__muluhisi3>
     226:	20 e0       	ldi	r18, 0x00	; 0
     228:	34 e2       	ldi	r19, 0x24	; 36
     22a:	44 ef       	ldi	r20, 0xF4	; 244
     22c:	50 e0       	ldi	r21, 0x00	; 0
     22e:	0e 94 f9 04 	call	0x9f2	; 0x9f2 <__udivmodsi4>
     232:	20 93 71 00 	sts	0x0071, r18	; 0x800071 <distance>
     236:	30 93 72 00 	sts	0x0072, r19	; 0x800072 <distance+0x1>
     23a:	40 93 73 00 	sts	0x0073, r20	; 0x800073 <distance+0x2>
     23e:	50 93 74 00 	sts	0x0074, r21	; 0x800074 <distance+0x3>
			if(distance>0 && distance<=40)
     242:	80 91 71 00 	lds	r24, 0x0071	; 0x800071 <distance>
     246:	90 91 72 00 	lds	r25, 0x0072	; 0x800072 <distance+0x1>
     24a:	a0 91 73 00 	lds	r26, 0x0073	; 0x800073 <distance+0x2>
     24e:	b0 91 74 00 	lds	r27, 0x0074	; 0x800074 <distance+0x3>
     252:	89 2b       	or	r24, r25
     254:	8a 2b       	or	r24, r26
     256:	8b 2b       	or	r24, r27
     258:	09 f4       	brne	.+2      	; 0x25c <__EEPROM_REGION_LENGTH__+0x5c>
     25a:	5b c0       	rjmp	.+182    	; 0x312 <__EEPROM_REGION_LENGTH__+0x112>
     25c:	80 91 71 00 	lds	r24, 0x0071	; 0x800071 <distance>
     260:	90 91 72 00 	lds	r25, 0x0072	; 0x800072 <distance+0x1>
     264:	a0 91 73 00 	lds	r26, 0x0073	; 0x800073 <distance+0x2>
     268:	b0 91 74 00 	lds	r27, 0x0074	; 0x800074 <distance+0x3>
     26c:	89 97       	sbiw	r24, 0x29	; 41
     26e:	a1 05       	cpc	r26, r1
     270:	b1 05       	cpc	r27, r1
     272:	08 f0       	brcs	.+2      	; 0x276 <__EEPROM_REGION_LENGTH__+0x76>
     274:	4e c0       	rjmp	.+156    	; 0x312 <__EEPROM_REGION_LENGTH__+0x112>
			{
				sprintf(arr,"%d",distance); // distance
     276:	80 91 71 00 	lds	r24, 0x0071	; 0x800071 <distance>
     27a:	90 91 72 00 	lds	r25, 0x0072	; 0x800072 <distance+0x1>
     27e:	a0 91 73 00 	lds	r26, 0x0073	; 0x800073 <distance+0x2>
     282:	b0 91 74 00 	lds	r27, 0x0074	; 0x800074 <distance+0x3>
     286:	bf 93       	push	r27
     288:	af 93       	push	r26
     28a:	9f 93       	push	r25
     28c:	8f 93       	push	r24
     28e:	0f 2e       	mov	r0, r31
     290:	f0 e6       	ldi	r31, 0x60	; 96
     292:	ef 2e       	mov	r14, r31
     294:	f0 e0       	ldi	r31, 0x00	; 0
     296:	ff 2e       	mov	r15, r31
     298:	f0 2d       	mov	r31, r0
     29a:	ff 92       	push	r15
     29c:	ef 92       	push	r14
     29e:	fe 01       	movw	r30, r28
     2a0:	31 96       	adiw	r30, 0x01	; 1
     2a2:	5f 01       	movw	r10, r30
     2a4:	ff 93       	push	r31
     2a6:	ef 93       	push	r30
     2a8:	0e 94 47 05 	call	0xa8e	; 0xa8e <sprintf>
				sprintf(brr,"%d",i); // angle
     2ac:	1f 93       	push	r17
     2ae:	0f 93       	push	r16
     2b0:	ff 92       	push	r15
     2b2:	ef 92       	push	r14
     2b4:	6e 01       	movw	r12, r28
     2b6:	fb e0       	ldi	r31, 0x0B	; 11
     2b8:	cf 0e       	add	r12, r31
     2ba:	d1 1c       	adc	r13, r1
     2bc:	df 92       	push	r13
     2be:	cf 92       	push	r12
     2c0:	0e 94 47 05 	call	0xa8e	; 0xa8e <sprintf>
				
				strcpy(cbb , arr);
     2c4:	7e 01       	movw	r14, r28
     2c6:	25 e1       	ldi	r18, 0x15	; 21
     2c8:	e2 0e       	add	r14, r18
     2ca:	f1 1c       	adc	r15, r1
     2cc:	b5 01       	movw	r22, r10
     2ce:	c7 01       	movw	r24, r14
     2d0:	0e 94 40 05 	call	0xa80	; 0xa80 <strcpy>
				strcat(cbb," ");
     2d4:	f7 01       	movw	r30, r14
     2d6:	01 90       	ld	r0, Z+
     2d8:	00 20       	and	r0, r0
     2da:	e9 f7       	brne	.-6      	; 0x2d6 <__EEPROM_REGION_LENGTH__+0xd6>
     2dc:	31 97       	sbiw	r30, 0x01	; 1
     2de:	80 e2       	ldi	r24, 0x20	; 32
     2e0:	90 e0       	ldi	r25, 0x00	; 0
     2e2:	91 83       	std	Z+1, r25	; 0x01
     2e4:	80 83       	st	Z, r24
				strcat(cbb , brr);
     2e6:	b6 01       	movw	r22, r12
     2e8:	c7 01       	movw	r24, r14
     2ea:	0e 94 35 05 	call	0xa6a	; 0xa6a <strcat>
				strcat(cbb,"\n");
     2ee:	f7 01       	movw	r30, r14
     2f0:	01 90       	ld	r0, Z+
     2f2:	00 20       	and	r0, r0
     2f4:	e9 f7       	brne	.-6      	; 0x2f0 <__EEPROM_REGION_LENGTH__+0xf0>
     2f6:	31 97       	sbiw	r30, 0x01	; 1
     2f8:	8a e0       	ldi	r24, 0x0A	; 10
     2fa:	90 e0       	ldi	r25, 0x00	; 0
     2fc:	91 83       	std	Z+1, r25	; 0x01
     2fe:	80 83       	st	Z, r24
				
				UART_SEND_STRING(cbb);
     300:	c7 01       	movw	r24, r14
     302:	0e 94 4f 03 	call	0x69e	; 0x69e <UART_SEND_STRING>
     306:	0f b6       	in	r0, 0x3f	; 63
     308:	f8 94       	cli
     30a:	de bf       	out	0x3e, r29	; 62
     30c:	0f be       	out	0x3f, r0	; 63
     30e:	cd bf       	out	0x3d, r28	; 61
     310:	31 c0       	rjmp	.+98     	; 0x374 <__EEPROM_REGION_LENGTH__+0x174>
			}
			else
			{
				sprintf(brr,"%d",i);
     312:	1f 93       	push	r17
     314:	0f 93       	push	r16
     316:	80 e6       	ldi	r24, 0x60	; 96
     318:	90 e0       	ldi	r25, 0x00	; 0
     31a:	9f 93       	push	r25
     31c:	8f 93       	push	r24
     31e:	6e 01       	movw	r12, r28
     320:	9b e0       	ldi	r25, 0x0B	; 11
     322:	c9 0e       	add	r12, r25
     324:	d1 1c       	adc	r13, r1
     326:	df 92       	push	r13
     328:	cf 92       	push	r12
     32a:	0e 94 47 05 	call	0xa8e	; 0xa8e <sprintf>
				strcpy(cbb,"-1 ");
     32e:	7e 01       	movw	r14, r28
     330:	e5 e1       	ldi	r30, 0x15	; 21
     332:	ee 0e       	add	r14, r30
     334:	f1 1c       	adc	r15, r1
     336:	8d e2       	ldi	r24, 0x2D	; 45
     338:	91 e3       	ldi	r25, 0x31	; 49
     33a:	9e 8b       	std	Y+22, r25	; 0x16
     33c:	8d 8b       	std	Y+21, r24	; 0x15
     33e:	80 e2       	ldi	r24, 0x20	; 32
     340:	90 e0       	ldi	r25, 0x00	; 0
     342:	f7 01       	movw	r30, r14
     344:	93 83       	std	Z+3, r25	; 0x03
     346:	82 83       	std	Z+2, r24	; 0x02
				strcat(cbb,brr);
     348:	b6 01       	movw	r22, r12
     34a:	c7 01       	movw	r24, r14
     34c:	0e 94 35 05 	call	0xa6a	; 0xa6a <strcat>
				strcat(cbb , "\n");
     350:	f7 01       	movw	r30, r14
     352:	01 90       	ld	r0, Z+
     354:	00 20       	and	r0, r0
     356:	e9 f7       	brne	.-6      	; 0x352 <__EEPROM_REGION_LENGTH__+0x152>
     358:	31 97       	sbiw	r30, 0x01	; 1
     35a:	8a e0       	ldi	r24, 0x0A	; 10
     35c:	90 e0       	ldi	r25, 0x00	; 0
     35e:	91 83       	std	Z+1, r25	; 0x01
     360:	80 83       	st	Z, r24
				
				UART_SEND_STRING(cbb);
     362:	c7 01       	movw	r24, r14
     364:	0e 94 4f 03 	call	0x69e	; 0x69e <UART_SEND_STRING>
     368:	0f 90       	pop	r0
     36a:	0f 90       	pop	r0
     36c:	0f 90       	pop	r0
     36e:	0f 90       	pop	r0
     370:	0f 90       	pop	r0
     372:	0f 90       	pop	r0
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
     374:	ff ef       	ldi	r31, 0xFF	; 255
     376:	21 ee       	ldi	r18, 0xE1	; 225
     378:	84 e0       	ldi	r24, 0x04	; 4
     37a:	f1 50       	subi	r31, 0x01	; 1
     37c:	20 40       	sbci	r18, 0x00	; 0
     37e:	80 40       	sbci	r24, 0x00	; 0
     380:	e1 f7       	brne	.-8      	; 0x37a <__EEPROM_REGION_LENGTH__+0x17a>
     382:	00 c0       	rjmp	.+0      	; 0x384 <__EEPROM_REGION_LENGTH__+0x184>
     384:	00 00       	nop
			}
			_delay_ms(200);
			
		}
     386:	80 91 64 00 	lds	r24, 0x0064	; 0x800064 <__data_end>
	char brr[10],cbb[10];	
    while (1) 
    {
		
		distance=0;
		for (i=0;i<=175;i+=x)
     38a:	08 0f       	add	r16, r24
     38c:	11 1d       	adc	r17, r1
     38e:	87 fd       	sbrc	r24, 7
     390:	1a 95       	dec	r17
     392:	00 3b       	cpi	r16, 0xB0	; 176
     394:	11 05       	cpc	r17, r1
     396:	0c f4       	brge	.+2      	; 0x39a <__EEPROM_REGION_LENGTH__+0x19a>
     398:	e7 ce       	rjmp	.-562    	; 0x168 <main+0x86>
     39a:	04 eb       	ldi	r16, 0xB4	; 180
     39c:	10 e0       	ldi	r17, 0x00	; 0
     39e:	15 c1       	rjmp	.+554    	; 0x5ca <__stack+0x16b>
		}
		
		
		for (i=180;i>=5;i-=x)
		{
			servo_int();
     3a0:	0e 94 49 00 	call	0x92	; 0x92 <servo_int>
			servo_speed(i);
     3a4:	b8 01       	movw	r22, r16
     3a6:	01 2e       	mov	r0, r17
     3a8:	00 0c       	add	r0, r0
     3aa:	88 0b       	sbc	r24, r24
     3ac:	99 0b       	sbc	r25, r25
     3ae:	0e 94 00 04 	call	0x800	; 0x800 <__floatsisf>
     3b2:	0e 94 59 00 	call	0xb2	; 0xb2 <servo_speed>
     3b6:	ef e4       	ldi	r30, 0x4F	; 79
     3b8:	f3 ec       	ldi	r31, 0xC3	; 195
     3ba:	31 97       	sbiw	r30, 0x01	; 1
     3bc:	f1 f7       	brne	.-4      	; 0x3ba <__EEPROM_REGION_LENGTH__+0x1ba>
     3be:	00 c0       	rjmp	.+0      	; 0x3c0 <__EEPROM_REGION_LENGTH__+0x1c0>
     3c0:	00 00       	nop
			
			_delay_ms(25);			
			//trigger
			ultra_init();
     3c2:	0e 94 18 03 	call	0x630	; 0x630 <ultra_init>
			SET_BIT(PORTB,1);
     3c6:	88 b3       	in	r24, 0x18	; 24
     3c8:	82 60       	ori	r24, 0x02	; 2
     3ca:	88 bb       	out	0x18, r24	; 24
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
     3cc:	f5 e8       	ldi	r31, 0x85	; 133
     3ce:	fa 95       	dec	r31
     3d0:	f1 f7       	brne	.-4      	; 0x3ce <__EEPROM_REGION_LENGTH__+0x1ce>
     3d2:	00 00       	nop
			_delay_us(50);
			CLR_BIT(PORTB,1);			
     3d4:	88 b3       	in	r24, 0x18	; 24
     3d6:	8d 7f       	andi	r24, 0xFD	; 253
     3d8:	88 bb       	out	0x18, r24	; 24

			a=input_capture_rising();
     3da:	0e 94 0c 03 	call	0x618	; 0x618 <input_capture_rising>
     3de:	a0 e0       	ldi	r26, 0x00	; 0
     3e0:	b0 e0       	ldi	r27, 0x00	; 0
     3e2:	80 93 6d 00 	sts	0x006D, r24	; 0x80006d <a>
     3e6:	90 93 6e 00 	sts	0x006E, r25	; 0x80006e <a+0x1>
     3ea:	a0 93 6f 00 	sts	0x006F, r26	; 0x80006f <a+0x2>
     3ee:	b0 93 70 00 	sts	0x0070, r27	; 0x800070 <a+0x3>
			b=input_capture_falling();
     3f2:	0e 94 1c 03 	call	0x638	; 0x638 <input_capture_falling>
     3f6:	a0 e0       	ldi	r26, 0x00	; 0
     3f8:	b0 e0       	ldi	r27, 0x00	; 0
     3fa:	80 93 69 00 	sts	0x0069, r24	; 0x800069 <b>
     3fe:	90 93 6a 00 	sts	0x006A, r25	; 0x80006a <b+0x1>
     402:	a0 93 6b 00 	sts	0x006B, r26	; 0x80006b <b+0x2>
     406:	b0 93 6c 00 	sts	0x006C, r27	; 0x80006c <b+0x3>
			STOP_TIMER();
     40a:	0e 94 2e 03 	call	0x65c	; 0x65c <STOP_TIMER>
			
	
			c=b-a;
     40e:	80 91 69 00 	lds	r24, 0x0069	; 0x800069 <b>
     412:	90 91 6a 00 	lds	r25, 0x006A	; 0x80006a <b+0x1>
     416:	a0 91 6b 00 	lds	r26, 0x006B	; 0x80006b <b+0x2>
     41a:	b0 91 6c 00 	lds	r27, 0x006C	; 0x80006c <b+0x3>
     41e:	40 91 6d 00 	lds	r20, 0x006D	; 0x80006d <a>
     422:	50 91 6e 00 	lds	r21, 0x006E	; 0x80006e <a+0x1>
     426:	60 91 6f 00 	lds	r22, 0x006F	; 0x80006f <a+0x2>
     42a:	70 91 70 00 	lds	r23, 0x0070	; 0x800070 <a+0x3>
     42e:	84 1b       	sub	r24, r20
     430:	95 0b       	sbc	r25, r21
     432:	a6 0b       	sbc	r26, r22
     434:	b7 0b       	sbc	r27, r23
     436:	80 93 65 00 	sts	0x0065, r24	; 0x800065 <c>
     43a:	90 93 66 00 	sts	0x0066, r25	; 0x800066 <c+0x1>
     43e:	a0 93 67 00 	sts	0x0067, r26	; 0x800067 <c+0x2>
     442:	b0 93 68 00 	sts	0x0068, r27	; 0x800068 <c+0x3>
			distance=((c*34200)/(F_CPU*2));
     446:	20 91 65 00 	lds	r18, 0x0065	; 0x800065 <c>
     44a:	30 91 66 00 	lds	r19, 0x0066	; 0x800066 <c+0x1>
     44e:	40 91 67 00 	lds	r20, 0x0067	; 0x800067 <c+0x2>
     452:	50 91 68 00 	lds	r21, 0x0068	; 0x800068 <c+0x3>
     456:	a8 e9       	ldi	r26, 0x98	; 152
     458:	b5 e8       	ldi	r27, 0x85	; 133
     45a:	0e 94 1b 05 	call	0xa36	; 0xa36 <__muluhisi3>
     45e:	20 e0       	ldi	r18, 0x00	; 0
     460:	34 e2       	ldi	r19, 0x24	; 36
     462:	44 ef       	ldi	r20, 0xF4	; 244
     464:	50 e0       	ldi	r21, 0x00	; 0
     466:	0e 94 f9 04 	call	0x9f2	; 0x9f2 <__udivmodsi4>
     46a:	20 93 71 00 	sts	0x0071, r18	; 0x800071 <distance>
     46e:	30 93 72 00 	sts	0x0072, r19	; 0x800072 <distance+0x1>
     472:	40 93 73 00 	sts	0x0073, r20	; 0x800073 <distance+0x2>
     476:	50 93 74 00 	sts	0x0074, r21	; 0x800074 <distance+0x3>
			if(distance>0 && distance<=40)
     47a:	80 91 71 00 	lds	r24, 0x0071	; 0x800071 <distance>
     47e:	90 91 72 00 	lds	r25, 0x0072	; 0x800072 <distance+0x1>
     482:	a0 91 73 00 	lds	r26, 0x0073	; 0x800073 <distance+0x2>
     486:	b0 91 74 00 	lds	r27, 0x0074	; 0x800074 <distance+0x3>
     48a:	89 2b       	or	r24, r25
     48c:	8a 2b       	or	r24, r26
     48e:	8b 2b       	or	r24, r27
     490:	09 f4       	brne	.+2      	; 0x494 <__stack+0x35>
     492:	5b c0       	rjmp	.+182    	; 0x54a <__stack+0xeb>
     494:	80 91 71 00 	lds	r24, 0x0071	; 0x800071 <distance>
     498:	90 91 72 00 	lds	r25, 0x0072	; 0x800072 <distance+0x1>
     49c:	a0 91 73 00 	lds	r26, 0x0073	; 0x800073 <distance+0x2>
     4a0:	b0 91 74 00 	lds	r27, 0x0074	; 0x800074 <distance+0x3>
     4a4:	89 97       	sbiw	r24, 0x29	; 41
     4a6:	a1 05       	cpc	r26, r1
     4a8:	b1 05       	cpc	r27, r1
     4aa:	08 f0       	brcs	.+2      	; 0x4ae <__stack+0x4f>
     4ac:	4e c0       	rjmp	.+156    	; 0x54a <__stack+0xeb>
			{
				sprintf(arr,"%d",distance); // distance
     4ae:	80 91 71 00 	lds	r24, 0x0071	; 0x800071 <distance>
     4b2:	90 91 72 00 	lds	r25, 0x0072	; 0x800072 <distance+0x1>
     4b6:	a0 91 73 00 	lds	r26, 0x0073	; 0x800073 <distance+0x2>
     4ba:	b0 91 74 00 	lds	r27, 0x0074	; 0x800074 <distance+0x3>
     4be:	bf 93       	push	r27
     4c0:	af 93       	push	r26
     4c2:	9f 93       	push	r25
     4c4:	8f 93       	push	r24
     4c6:	0f 2e       	mov	r0, r31
     4c8:	f0 e6       	ldi	r31, 0x60	; 96
     4ca:	ef 2e       	mov	r14, r31
     4cc:	f0 e0       	ldi	r31, 0x00	; 0
     4ce:	ff 2e       	mov	r15, r31
     4d0:	f0 2d       	mov	r31, r0
     4d2:	ff 92       	push	r15
     4d4:	ef 92       	push	r14
     4d6:	ce 01       	movw	r24, r28
     4d8:	01 96       	adiw	r24, 0x01	; 1
     4da:	5c 01       	movw	r10, r24
     4dc:	9f 93       	push	r25
     4de:	8f 93       	push	r24
     4e0:	0e 94 47 05 	call	0xa8e	; 0xa8e <sprintf>
				sprintf(brr,"%d",i); // angle
     4e4:	1f 93       	push	r17
     4e6:	0f 93       	push	r16
     4e8:	ff 92       	push	r15
     4ea:	ef 92       	push	r14
     4ec:	6e 01       	movw	r12, r28
     4ee:	9b e0       	ldi	r25, 0x0B	; 11
     4f0:	c9 0e       	add	r12, r25
     4f2:	d1 1c       	adc	r13, r1
     4f4:	df 92       	push	r13
     4f6:	cf 92       	push	r12
     4f8:	0e 94 47 05 	call	0xa8e	; 0xa8e <sprintf>
				
				strcpy(cbb , arr);
     4fc:	7e 01       	movw	r14, r28
     4fe:	e5 e1       	ldi	r30, 0x15	; 21
     500:	ee 0e       	add	r14, r30
     502:	f1 1c       	adc	r15, r1
     504:	b5 01       	movw	r22, r10
     506:	c7 01       	movw	r24, r14
     508:	0e 94 40 05 	call	0xa80	; 0xa80 <strcpy>
				strcat(cbb," ");
     50c:	f7 01       	movw	r30, r14
     50e:	01 90       	ld	r0, Z+
     510:	00 20       	and	r0, r0
     512:	e9 f7       	brne	.-6      	; 0x50e <__stack+0xaf>
     514:	31 97       	sbiw	r30, 0x01	; 1
     516:	80 e2       	ldi	r24, 0x20	; 32
     518:	90 e0       	ldi	r25, 0x00	; 0
     51a:	91 83       	std	Z+1, r25	; 0x01
     51c:	80 83       	st	Z, r24
				strcat(cbb , brr);
     51e:	b6 01       	movw	r22, r12
     520:	c7 01       	movw	r24, r14
     522:	0e 94 35 05 	call	0xa6a	; 0xa6a <strcat>
				strcat(cbb,"\n");
     526:	f7 01       	movw	r30, r14
     528:	01 90       	ld	r0, Z+
     52a:	00 20       	and	r0, r0
     52c:	e9 f7       	brne	.-6      	; 0x528 <__stack+0xc9>
     52e:	31 97       	sbiw	r30, 0x01	; 1
     530:	8a e0       	ldi	r24, 0x0A	; 10
     532:	90 e0       	ldi	r25, 0x00	; 0
     534:	91 83       	std	Z+1, r25	; 0x01
     536:	80 83       	st	Z, r24
				
				UART_SEND_STRING(cbb);
     538:	c7 01       	movw	r24, r14
     53a:	0e 94 4f 03 	call	0x69e	; 0x69e <UART_SEND_STRING>
     53e:	0f b6       	in	r0, 0x3f	; 63
     540:	f8 94       	cli
     542:	de bf       	out	0x3e, r29	; 62
     544:	0f be       	out	0x3f, r0	; 63
     546:	cd bf       	out	0x3d, r28	; 61
     548:	31 c0       	rjmp	.+98     	; 0x5ac <__stack+0x14d>
			}
			else
			{
				sprintf(brr,"%d",i);
     54a:	1f 93       	push	r17
     54c:	0f 93       	push	r16
     54e:	80 e6       	ldi	r24, 0x60	; 96
     550:	90 e0       	ldi	r25, 0x00	; 0
     552:	9f 93       	push	r25
     554:	8f 93       	push	r24
     556:	6e 01       	movw	r12, r28
     558:	9b e0       	ldi	r25, 0x0B	; 11
     55a:	c9 0e       	add	r12, r25
     55c:	d1 1c       	adc	r13, r1
     55e:	df 92       	push	r13
     560:	cf 92       	push	r12
     562:	0e 94 47 05 	call	0xa8e	; 0xa8e <sprintf>
				strcpy(cbb,"-1 ");
     566:	7e 01       	movw	r14, r28
     568:	e5 e1       	ldi	r30, 0x15	; 21
     56a:	ee 0e       	add	r14, r30
     56c:	f1 1c       	adc	r15, r1
     56e:	8d e2       	ldi	r24, 0x2D	; 45
     570:	91 e3       	ldi	r25, 0x31	; 49
     572:	9e 8b       	std	Y+22, r25	; 0x16
     574:	8d 8b       	std	Y+21, r24	; 0x15
     576:	80 e2       	ldi	r24, 0x20	; 32
     578:	90 e0       	ldi	r25, 0x00	; 0
     57a:	f7 01       	movw	r30, r14
     57c:	93 83       	std	Z+3, r25	; 0x03
     57e:	82 83       	std	Z+2, r24	; 0x02
				strcat(cbb,brr);
     580:	b6 01       	movw	r22, r12
     582:	c7 01       	movw	r24, r14
     584:	0e 94 35 05 	call	0xa6a	; 0xa6a <strcat>
				strcat(cbb , "\n");
     588:	f7 01       	movw	r30, r14
     58a:	01 90       	ld	r0, Z+
     58c:	00 20       	and	r0, r0
     58e:	e9 f7       	brne	.-6      	; 0x58a <__stack+0x12b>
     590:	31 97       	sbiw	r30, 0x01	; 1
     592:	8a e0       	ldi	r24, 0x0A	; 10
     594:	90 e0       	ldi	r25, 0x00	; 0
     596:	91 83       	std	Z+1, r25	; 0x01
     598:	80 83       	st	Z, r24
				
				UART_SEND_STRING(cbb);
     59a:	c7 01       	movw	r24, r14
     59c:	0e 94 4f 03 	call	0x69e	; 0x69e <UART_SEND_STRING>
     5a0:	0f 90       	pop	r0
     5a2:	0f 90       	pop	r0
     5a4:	0f 90       	pop	r0
     5a6:	0f 90       	pop	r0
     5a8:	0f 90       	pop	r0
     5aa:	0f 90       	pop	r0
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
     5ac:	ff ef       	ldi	r31, 0xFF	; 255
     5ae:	21 ee       	ldi	r18, 0xE1	; 225
     5b0:	84 e0       	ldi	r24, 0x04	; 4
     5b2:	f1 50       	subi	r31, 0x01	; 1
     5b4:	20 40       	sbci	r18, 0x00	; 0
     5b6:	80 40       	sbci	r24, 0x00	; 0
     5b8:	e1 f7       	brne	.-8      	; 0x5b2 <__stack+0x153>
     5ba:	00 c0       	rjmp	.+0      	; 0x5bc <__stack+0x15d>
     5bc:	00 00       	nop
			}
			_delay_ms(200);
			
		}		
     5be:	80 91 64 00 	lds	r24, 0x0064	; 0x800064 <__data_end>
			_delay_ms(200);
			
		}
		
		
		for (i=180;i>=5;i-=x)
     5c2:	08 1b       	sub	r16, r24
     5c4:	11 09       	sbc	r17, r1
     5c6:	87 fd       	sbrc	r24, 7
     5c8:	13 95       	inc	r17
     5ca:	05 30       	cpi	r16, 0x05	; 5
     5cc:	11 05       	cpc	r17, r1
     5ce:	0c f0       	brlt	.+2      	; 0x5d2 <__stack+0x173>
     5d0:	e7 ce       	rjmp	.-562    	; 0x3a0 <__EEPROM_REGION_LENGTH__+0x1a0>
     5d2:	bf cd       	rjmp	.-1154   	; 0x152 <main+0x70>

000005d4 <__vector_11>:
		lcd_string(cbb);
		_delay_ms(1000);*/
    }
}
ISR(USART_RXC_vect)
{
     5d4:	1f 92       	push	r1
     5d6:	0f 92       	push	r0
     5d8:	0f b6       	in	r0, 0x3f	; 63
     5da:	0f 92       	push	r0
     5dc:	11 24       	eor	r1, r1
     5de:	8f 93       	push	r24
	CLR_BIT(UCSRB ,TXEN );
     5e0:	8a b1       	in	r24, 0x0a	; 10
     5e2:	87 7f       	andi	r24, 0xF7	; 247
     5e4:	8a b9       	out	0x0a, r24	; 10
	CLR_BIT(UCSRB ,RXEN );
     5e6:	8a b1       	in	r24, 0x0a	; 10
     5e8:	8f 7e       	andi	r24, 0xEF	; 239
     5ea:	8a b9       	out	0x0a, r24	; 10
	if (x!=0)x=0;
     5ec:	80 91 64 00 	lds	r24, 0x0064	; 0x800064 <__data_end>
     5f0:	88 23       	and	r24, r24
     5f2:	19 f0       	breq	.+6      	; 0x5fa <__vector_11+0x26>
     5f4:	10 92 64 00 	sts	0x0064, r1	; 0x800064 <__data_end>
     5f8:	03 c0       	rjmp	.+6      	; 0x600 <__vector_11+0x2c>
	else x=5;
     5fa:	85 e0       	ldi	r24, 0x05	; 5
     5fc:	80 93 64 00 	sts	0x0064, r24	; 0x800064 <__data_end>
	SET_BIT(UCSRB ,TXEN );
     600:	8a b1       	in	r24, 0x0a	; 10
     602:	88 60       	ori	r24, 0x08	; 8
     604:	8a b9       	out	0x0a, r24	; 10
	SET_BIT(UCSRB ,RXEN );
     606:	8a b1       	in	r24, 0x0a	; 10
     608:	80 61       	ori	r24, 0x10	; 16
     60a:	8a b9       	out	0x0a, r24	; 10
}
     60c:	8f 91       	pop	r24
     60e:	0f 90       	pop	r0
     610:	0f be       	out	0x3f, r0	; 63
     612:	0f 90       	pop	r0
     614:	1f 90       	pop	r1
     616:	18 95       	reti

00000618 <input_capture_rising>:
}*/

uint16_t input_capture_rising()
{
	uint16_t X;
	TCCR1B=0xc1;
     618:	81 ec       	ldi	r24, 0xC1	; 193
     61a:	8e bd       	out	0x2e, r24	; 46
	while(READ_BIT(TIFR , ICF1)==0)
     61c:	03 c0       	rjmp	.+6      	; 0x624 <input_capture_rising+0xc>
	{
		SET_BIT(PORTB,0);
     61e:	88 b3       	in	r24, 0x18	; 24
     620:	81 60       	ori	r24, 0x01	; 1
     622:	88 bb       	out	0x18, r24	; 24

uint16_t input_capture_rising()
{
	uint16_t X;
	TCCR1B=0xc1;
	while(READ_BIT(TIFR , ICF1)==0)
     624:	08 b6       	in	r0, 0x38	; 56
     626:	05 fe       	sbrs	r0, 5
     628:	fa cf       	rjmp	.-12     	; 0x61e <input_capture_rising+0x6>
	{
		SET_BIT(PORTB,0);
	}
	X=ICR1;	
     62a:	86 b5       	in	r24, 0x26	; 38
     62c:	97 b5       	in	r25, 0x27	; 39
	return X;
}
     62e:	08 95       	ret

00000630 <ultra_init>:

void ultra_init()
{
	TCCR1A=0;
     630:	1f bc       	out	0x2f, r1	; 47
	TIFR=(1<<ICF1);
     632:	80 e2       	ldi	r24, 0x20	; 32
     634:	88 bf       	out	0x38, r24	; 56
     636:	08 95       	ret

00000638 <input_capture_falling>:
}
uint16_t input_capture_falling()
{
	SET_BIT(TIFR,ICF1);
     638:	88 b7       	in	r24, 0x38	; 56
     63a:	80 62       	ori	r24, 0x20	; 32
     63c:	88 bf       	out	0x38, r24	; 56
	uint16_t A;
	
	TCCR1B=0x81;
     63e:	81 e8       	ldi	r24, 0x81	; 129
     640:	8e bd       	out	0x2e, r24	; 46
	CLR_BIT(PORTB,2);
     642:	88 b3       	in	r24, 0x18	; 24
     644:	8b 7f       	andi	r24, 0xFB	; 251
     646:	88 bb       	out	0x18, r24	; 24
	while(READ_BIT(TIFR , ICF1)==0)
     648:	03 c0       	rjmp	.+6      	; 0x650 <input_capture_falling+0x18>
	{
		SET_BIT(PORTB,2);
     64a:	88 b3       	in	r24, 0x18	; 24
     64c:	84 60       	ori	r24, 0x04	; 4
     64e:	88 bb       	out	0x18, r24	; 24
	SET_BIT(TIFR,ICF1);
	uint16_t A;
	
	TCCR1B=0x81;
	CLR_BIT(PORTB,2);
	while(READ_BIT(TIFR , ICF1)==0)
     650:	08 b6       	in	r0, 0x38	; 56
     652:	05 fe       	sbrs	r0, 5
     654:	fa cf       	rjmp	.-12     	; 0x64a <input_capture_falling+0x12>
	{
		SET_BIT(PORTB,2);
	}
	A=ICR1;	
     656:	86 b5       	in	r24, 0x26	; 38
     658:	97 b5       	in	r25, 0x27	; 39
	return A;
}
     65a:	08 95       	ret

0000065c <STOP_TIMER>:
void STOP_TIMER()
{
	TCNT1=0;
     65c:	1d bc       	out	0x2d, r1	; 45
     65e:	1c bc       	out	0x2c, r1	; 44
	TCCR1B=0;
     660:	1e bc       	out	0x2e, r1	; 46
     662:	08 95       	ret

00000664 <UART_Vinit>:
#include <util/delay.h>

void UART_Vinit(unsigned int baudrate)
{
	//SET VALUE OF UBRR REGISTER
	short int data=(F_CPU>>4)/baudrate;
     664:	9c 01       	movw	r18, r24
     666:	40 e0       	ldi	r20, 0x00	; 0
     668:	50 e0       	ldi	r21, 0x00	; 0
     66a:	60 e2       	ldi	r22, 0x20	; 32
     66c:	71 ea       	ldi	r23, 0xA1	; 161
     66e:	87 e0       	ldi	r24, 0x07	; 7
     670:	90 e0       	ldi	r25, 0x00	; 0
     672:	0e 94 f9 04 	call	0x9f2	; 0x9f2 <__udivmodsi4>
	data--;
     676:	21 50       	subi	r18, 0x01	; 1
     678:	31 09       	sbc	r19, r1
	UBRRH = (unsigned char)(data >> 8);
     67a:	30 bd       	out	0x20, r19	; 32
	UBRRL = (unsigned char) data;
     67c:	29 b9       	out	0x09, r18	; 9
	
	SET_BIT(UCSRB ,RXEN );
     67e:	8a b1       	in	r24, 0x0a	; 10
     680:	80 61       	ori	r24, 0x10	; 16
     682:	8a b9       	out	0x0a, r24	; 10
	SET_BIT(UCSRB,TXEN);
     684:	8a b1       	in	r24, 0x0a	; 10
     686:	88 60       	ori	r24, 0x08	; 8
     688:	8a b9       	out	0x0a, r24	; 10
	SET_BIT(UCSRB,RXCIE);
     68a:	8a b1       	in	r24, 0x0a	; 10
     68c:	80 68       	ori	r24, 0x80	; 128
     68e:	8a b9       	out	0x0a, r24	; 10
	UCSRC = (1<<URSEL) | (1<<UCSZ0) | (1<<UCSZ1);
     690:	86 e8       	ldi	r24, 0x86	; 134
     692:	80 bd       	out	0x20, r24	; 32
     694:	08 95       	ret

00000696 <UART_SEND_CHAR>:
}


void UART_SEND_CHAR(char DATA)
{
	while(READ_BIT(UCSRA,UDRE) == 0);
     696:	5d 9b       	sbis	0x0b, 5	; 11
     698:	fe cf       	rjmp	.-4      	; 0x696 <UART_SEND_CHAR>
	UDR = DATA;
     69a:	8c b9       	out	0x0c, r24	; 12
     69c:	08 95       	ret

0000069e <UART_SEND_STRING>:
}

void UART_SEND_STRING(char *DATA)
{
     69e:	cf 93       	push	r28
     6a0:	df 93       	push	r29
     6a2:	ec 01       	movw	r28, r24
	while(*DATA != '\0')
     6a4:	09 c0       	rjmp	.+18     	; 0x6b8 <UART_SEND_STRING+0x1a>
	{
		UART_SEND_CHAR(*DATA);
     6a6:	0e 94 4b 03 	call	0x696	; 0x696 <UART_SEND_CHAR>
		DATA++;
     6aa:	21 96       	adiw	r28, 0x01	; 1
     6ac:	8f ec       	ldi	r24, 0xCF	; 207
     6ae:	97 e0       	ldi	r25, 0x07	; 7
     6b0:	01 97       	sbiw	r24, 0x01	; 1
     6b2:	f1 f7       	brne	.-4      	; 0x6b0 <UART_SEND_STRING+0x12>
     6b4:	00 c0       	rjmp	.+0      	; 0x6b6 <UART_SEND_STRING+0x18>
     6b6:	00 00       	nop
	UDR = DATA;
}

void UART_SEND_STRING(char *DATA)
{
	while(*DATA != '\0')
     6b8:	88 81       	ld	r24, Y
     6ba:	81 11       	cpse	r24, r1
     6bc:	f4 cf       	rjmp	.-24     	; 0x6a6 <UART_SEND_STRING+0x8>
	{
		UART_SEND_CHAR(*DATA);
		DATA++;
		_delay_ms(1);
	}
}
     6be:	df 91       	pop	r29
     6c0:	cf 91       	pop	r28
     6c2:	08 95       	ret

000006c4 <__subsf3>:
     6c4:	50 58       	subi	r21, 0x80	; 128

000006c6 <__addsf3>:
     6c6:	bb 27       	eor	r27, r27
     6c8:	aa 27       	eor	r26, r26
     6ca:	0e 94 7a 03 	call	0x6f4	; 0x6f4 <__addsf3x>
     6ce:	0c 94 52 04 	jmp	0x8a4	; 0x8a4 <__fp_round>
     6d2:	0e 94 44 04 	call	0x888	; 0x888 <__fp_pscA>
     6d6:	38 f0       	brcs	.+14     	; 0x6e6 <__addsf3+0x20>
     6d8:	0e 94 4b 04 	call	0x896	; 0x896 <__fp_pscB>
     6dc:	20 f0       	brcs	.+8      	; 0x6e6 <__addsf3+0x20>
     6de:	39 f4       	brne	.+14     	; 0x6ee <__addsf3+0x28>
     6e0:	9f 3f       	cpi	r25, 0xFF	; 255
     6e2:	19 f4       	brne	.+6      	; 0x6ea <__addsf3+0x24>
     6e4:	26 f4       	brtc	.+8      	; 0x6ee <__addsf3+0x28>
     6e6:	0c 94 41 04 	jmp	0x882	; 0x882 <__fp_nan>
     6ea:	0e f4       	brtc	.+2      	; 0x6ee <__addsf3+0x28>
     6ec:	e0 95       	com	r30
     6ee:	e7 fb       	bst	r30, 7
     6f0:	0c 94 3b 04 	jmp	0x876	; 0x876 <__fp_inf>

000006f4 <__addsf3x>:
     6f4:	e9 2f       	mov	r30, r25
     6f6:	0e 94 63 04 	call	0x8c6	; 0x8c6 <__fp_split3>
     6fa:	58 f3       	brcs	.-42     	; 0x6d2 <__addsf3+0xc>
     6fc:	ba 17       	cp	r27, r26
     6fe:	62 07       	cpc	r22, r18
     700:	73 07       	cpc	r23, r19
     702:	84 07       	cpc	r24, r20
     704:	95 07       	cpc	r25, r21
     706:	20 f0       	brcs	.+8      	; 0x710 <__addsf3x+0x1c>
     708:	79 f4       	brne	.+30     	; 0x728 <__addsf3x+0x34>
     70a:	a6 f5       	brtc	.+104    	; 0x774 <__addsf3x+0x80>
     70c:	0c 94 85 04 	jmp	0x90a	; 0x90a <__fp_zero>
     710:	0e f4       	brtc	.+2      	; 0x714 <__addsf3x+0x20>
     712:	e0 95       	com	r30
     714:	0b 2e       	mov	r0, r27
     716:	ba 2f       	mov	r27, r26
     718:	a0 2d       	mov	r26, r0
     71a:	0b 01       	movw	r0, r22
     71c:	b9 01       	movw	r22, r18
     71e:	90 01       	movw	r18, r0
     720:	0c 01       	movw	r0, r24
     722:	ca 01       	movw	r24, r20
     724:	a0 01       	movw	r20, r0
     726:	11 24       	eor	r1, r1
     728:	ff 27       	eor	r31, r31
     72a:	59 1b       	sub	r21, r25
     72c:	99 f0       	breq	.+38     	; 0x754 <__addsf3x+0x60>
     72e:	59 3f       	cpi	r21, 0xF9	; 249
     730:	50 f4       	brcc	.+20     	; 0x746 <__addsf3x+0x52>
     732:	50 3e       	cpi	r21, 0xE0	; 224
     734:	68 f1       	brcs	.+90     	; 0x790 <__addsf3x+0x9c>
     736:	1a 16       	cp	r1, r26
     738:	f0 40       	sbci	r31, 0x00	; 0
     73a:	a2 2f       	mov	r26, r18
     73c:	23 2f       	mov	r18, r19
     73e:	34 2f       	mov	r19, r20
     740:	44 27       	eor	r20, r20
     742:	58 5f       	subi	r21, 0xF8	; 248
     744:	f3 cf       	rjmp	.-26     	; 0x72c <__addsf3x+0x38>
     746:	46 95       	lsr	r20
     748:	37 95       	ror	r19
     74a:	27 95       	ror	r18
     74c:	a7 95       	ror	r26
     74e:	f0 40       	sbci	r31, 0x00	; 0
     750:	53 95       	inc	r21
     752:	c9 f7       	brne	.-14     	; 0x746 <__addsf3x+0x52>
     754:	7e f4       	brtc	.+30     	; 0x774 <__addsf3x+0x80>
     756:	1f 16       	cp	r1, r31
     758:	ba 0b       	sbc	r27, r26
     75a:	62 0b       	sbc	r22, r18
     75c:	73 0b       	sbc	r23, r19
     75e:	84 0b       	sbc	r24, r20
     760:	ba f0       	brmi	.+46     	; 0x790 <__addsf3x+0x9c>
     762:	91 50       	subi	r25, 0x01	; 1
     764:	a1 f0       	breq	.+40     	; 0x78e <__addsf3x+0x9a>
     766:	ff 0f       	add	r31, r31
     768:	bb 1f       	adc	r27, r27
     76a:	66 1f       	adc	r22, r22
     76c:	77 1f       	adc	r23, r23
     76e:	88 1f       	adc	r24, r24
     770:	c2 f7       	brpl	.-16     	; 0x762 <__addsf3x+0x6e>
     772:	0e c0       	rjmp	.+28     	; 0x790 <__addsf3x+0x9c>
     774:	ba 0f       	add	r27, r26
     776:	62 1f       	adc	r22, r18
     778:	73 1f       	adc	r23, r19
     77a:	84 1f       	adc	r24, r20
     77c:	48 f4       	brcc	.+18     	; 0x790 <__addsf3x+0x9c>
     77e:	87 95       	ror	r24
     780:	77 95       	ror	r23
     782:	67 95       	ror	r22
     784:	b7 95       	ror	r27
     786:	f7 95       	ror	r31
     788:	9e 3f       	cpi	r25, 0xFE	; 254
     78a:	08 f0       	brcs	.+2      	; 0x78e <__addsf3x+0x9a>
     78c:	b0 cf       	rjmp	.-160    	; 0x6ee <__addsf3+0x28>
     78e:	93 95       	inc	r25
     790:	88 0f       	add	r24, r24
     792:	08 f0       	brcs	.+2      	; 0x796 <__addsf3x+0xa2>
     794:	99 27       	eor	r25, r25
     796:	ee 0f       	add	r30, r30
     798:	97 95       	ror	r25
     79a:	87 95       	ror	r24
     79c:	08 95       	ret

0000079e <__fixunssfsi>:
     79e:	0e 94 6b 04 	call	0x8d6	; 0x8d6 <__fp_splitA>
     7a2:	88 f0       	brcs	.+34     	; 0x7c6 <__fixunssfsi+0x28>
     7a4:	9f 57       	subi	r25, 0x7F	; 127
     7a6:	98 f0       	brcs	.+38     	; 0x7ce <__fixunssfsi+0x30>
     7a8:	b9 2f       	mov	r27, r25
     7aa:	99 27       	eor	r25, r25
     7ac:	b7 51       	subi	r27, 0x17	; 23
     7ae:	b0 f0       	brcs	.+44     	; 0x7dc <__fixunssfsi+0x3e>
     7b0:	e1 f0       	breq	.+56     	; 0x7ea <__fixunssfsi+0x4c>
     7b2:	66 0f       	add	r22, r22
     7b4:	77 1f       	adc	r23, r23
     7b6:	88 1f       	adc	r24, r24
     7b8:	99 1f       	adc	r25, r25
     7ba:	1a f0       	brmi	.+6      	; 0x7c2 <__fixunssfsi+0x24>
     7bc:	ba 95       	dec	r27
     7be:	c9 f7       	brne	.-14     	; 0x7b2 <__fixunssfsi+0x14>
     7c0:	14 c0       	rjmp	.+40     	; 0x7ea <__fixunssfsi+0x4c>
     7c2:	b1 30       	cpi	r27, 0x01	; 1
     7c4:	91 f0       	breq	.+36     	; 0x7ea <__fixunssfsi+0x4c>
     7c6:	0e 94 85 04 	call	0x90a	; 0x90a <__fp_zero>
     7ca:	b1 e0       	ldi	r27, 0x01	; 1
     7cc:	08 95       	ret
     7ce:	0c 94 85 04 	jmp	0x90a	; 0x90a <__fp_zero>
     7d2:	67 2f       	mov	r22, r23
     7d4:	78 2f       	mov	r23, r24
     7d6:	88 27       	eor	r24, r24
     7d8:	b8 5f       	subi	r27, 0xF8	; 248
     7da:	39 f0       	breq	.+14     	; 0x7ea <__fixunssfsi+0x4c>
     7dc:	b9 3f       	cpi	r27, 0xF9	; 249
     7de:	cc f3       	brlt	.-14     	; 0x7d2 <__fixunssfsi+0x34>
     7e0:	86 95       	lsr	r24
     7e2:	77 95       	ror	r23
     7e4:	67 95       	ror	r22
     7e6:	b3 95       	inc	r27
     7e8:	d9 f7       	brne	.-10     	; 0x7e0 <__fixunssfsi+0x42>
     7ea:	3e f4       	brtc	.+14     	; 0x7fa <__fixunssfsi+0x5c>
     7ec:	90 95       	com	r25
     7ee:	80 95       	com	r24
     7f0:	70 95       	com	r23
     7f2:	61 95       	neg	r22
     7f4:	7f 4f       	sbci	r23, 0xFF	; 255
     7f6:	8f 4f       	sbci	r24, 0xFF	; 255
     7f8:	9f 4f       	sbci	r25, 0xFF	; 255
     7fa:	08 95       	ret

000007fc <__floatunsisf>:
     7fc:	e8 94       	clt
     7fe:	09 c0       	rjmp	.+18     	; 0x812 <__floatsisf+0x12>

00000800 <__floatsisf>:
     800:	97 fb       	bst	r25, 7
     802:	3e f4       	brtc	.+14     	; 0x812 <__floatsisf+0x12>
     804:	90 95       	com	r25
     806:	80 95       	com	r24
     808:	70 95       	com	r23
     80a:	61 95       	neg	r22
     80c:	7f 4f       	sbci	r23, 0xFF	; 255
     80e:	8f 4f       	sbci	r24, 0xFF	; 255
     810:	9f 4f       	sbci	r25, 0xFF	; 255
     812:	99 23       	and	r25, r25
     814:	a9 f0       	breq	.+42     	; 0x840 <__floatsisf+0x40>
     816:	f9 2f       	mov	r31, r25
     818:	96 e9       	ldi	r25, 0x96	; 150
     81a:	bb 27       	eor	r27, r27
     81c:	93 95       	inc	r25
     81e:	f6 95       	lsr	r31
     820:	87 95       	ror	r24
     822:	77 95       	ror	r23
     824:	67 95       	ror	r22
     826:	b7 95       	ror	r27
     828:	f1 11       	cpse	r31, r1
     82a:	f8 cf       	rjmp	.-16     	; 0x81c <__floatsisf+0x1c>
     82c:	fa f4       	brpl	.+62     	; 0x86c <__floatsisf+0x6c>
     82e:	bb 0f       	add	r27, r27
     830:	11 f4       	brne	.+4      	; 0x836 <__floatsisf+0x36>
     832:	60 ff       	sbrs	r22, 0
     834:	1b c0       	rjmp	.+54     	; 0x86c <__floatsisf+0x6c>
     836:	6f 5f       	subi	r22, 0xFF	; 255
     838:	7f 4f       	sbci	r23, 0xFF	; 255
     83a:	8f 4f       	sbci	r24, 0xFF	; 255
     83c:	9f 4f       	sbci	r25, 0xFF	; 255
     83e:	16 c0       	rjmp	.+44     	; 0x86c <__floatsisf+0x6c>
     840:	88 23       	and	r24, r24
     842:	11 f0       	breq	.+4      	; 0x848 <__floatsisf+0x48>
     844:	96 e9       	ldi	r25, 0x96	; 150
     846:	11 c0       	rjmp	.+34     	; 0x86a <__floatsisf+0x6a>
     848:	77 23       	and	r23, r23
     84a:	21 f0       	breq	.+8      	; 0x854 <__floatsisf+0x54>
     84c:	9e e8       	ldi	r25, 0x8E	; 142
     84e:	87 2f       	mov	r24, r23
     850:	76 2f       	mov	r23, r22
     852:	05 c0       	rjmp	.+10     	; 0x85e <__floatsisf+0x5e>
     854:	66 23       	and	r22, r22
     856:	71 f0       	breq	.+28     	; 0x874 <__floatsisf+0x74>
     858:	96 e8       	ldi	r25, 0x86	; 134
     85a:	86 2f       	mov	r24, r22
     85c:	70 e0       	ldi	r23, 0x00	; 0
     85e:	60 e0       	ldi	r22, 0x00	; 0
     860:	2a f0       	brmi	.+10     	; 0x86c <__floatsisf+0x6c>
     862:	9a 95       	dec	r25
     864:	66 0f       	add	r22, r22
     866:	77 1f       	adc	r23, r23
     868:	88 1f       	adc	r24, r24
     86a:	da f7       	brpl	.-10     	; 0x862 <__floatsisf+0x62>
     86c:	88 0f       	add	r24, r24
     86e:	96 95       	lsr	r25
     870:	87 95       	ror	r24
     872:	97 f9       	bld	r25, 7
     874:	08 95       	ret

00000876 <__fp_inf>:
     876:	97 f9       	bld	r25, 7
     878:	9f 67       	ori	r25, 0x7F	; 127
     87a:	80 e8       	ldi	r24, 0x80	; 128
     87c:	70 e0       	ldi	r23, 0x00	; 0
     87e:	60 e0       	ldi	r22, 0x00	; 0
     880:	08 95       	ret

00000882 <__fp_nan>:
     882:	9f ef       	ldi	r25, 0xFF	; 255
     884:	80 ec       	ldi	r24, 0xC0	; 192
     886:	08 95       	ret

00000888 <__fp_pscA>:
     888:	00 24       	eor	r0, r0
     88a:	0a 94       	dec	r0
     88c:	16 16       	cp	r1, r22
     88e:	17 06       	cpc	r1, r23
     890:	18 06       	cpc	r1, r24
     892:	09 06       	cpc	r0, r25
     894:	08 95       	ret

00000896 <__fp_pscB>:
     896:	00 24       	eor	r0, r0
     898:	0a 94       	dec	r0
     89a:	12 16       	cp	r1, r18
     89c:	13 06       	cpc	r1, r19
     89e:	14 06       	cpc	r1, r20
     8a0:	05 06       	cpc	r0, r21
     8a2:	08 95       	ret

000008a4 <__fp_round>:
     8a4:	09 2e       	mov	r0, r25
     8a6:	03 94       	inc	r0
     8a8:	00 0c       	add	r0, r0
     8aa:	11 f4       	brne	.+4      	; 0x8b0 <__fp_round+0xc>
     8ac:	88 23       	and	r24, r24
     8ae:	52 f0       	brmi	.+20     	; 0x8c4 <__fp_round+0x20>
     8b0:	bb 0f       	add	r27, r27
     8b2:	40 f4       	brcc	.+16     	; 0x8c4 <__fp_round+0x20>
     8b4:	bf 2b       	or	r27, r31
     8b6:	11 f4       	brne	.+4      	; 0x8bc <__fp_round+0x18>
     8b8:	60 ff       	sbrs	r22, 0
     8ba:	04 c0       	rjmp	.+8      	; 0x8c4 <__fp_round+0x20>
     8bc:	6f 5f       	subi	r22, 0xFF	; 255
     8be:	7f 4f       	sbci	r23, 0xFF	; 255
     8c0:	8f 4f       	sbci	r24, 0xFF	; 255
     8c2:	9f 4f       	sbci	r25, 0xFF	; 255
     8c4:	08 95       	ret

000008c6 <__fp_split3>:
     8c6:	57 fd       	sbrc	r21, 7
     8c8:	90 58       	subi	r25, 0x80	; 128
     8ca:	44 0f       	add	r20, r20
     8cc:	55 1f       	adc	r21, r21
     8ce:	59 f0       	breq	.+22     	; 0x8e6 <__fp_splitA+0x10>
     8d0:	5f 3f       	cpi	r21, 0xFF	; 255
     8d2:	71 f0       	breq	.+28     	; 0x8f0 <__fp_splitA+0x1a>
     8d4:	47 95       	ror	r20

000008d6 <__fp_splitA>:
     8d6:	88 0f       	add	r24, r24
     8d8:	97 fb       	bst	r25, 7
     8da:	99 1f       	adc	r25, r25
     8dc:	61 f0       	breq	.+24     	; 0x8f6 <__fp_splitA+0x20>
     8de:	9f 3f       	cpi	r25, 0xFF	; 255
     8e0:	79 f0       	breq	.+30     	; 0x900 <__fp_splitA+0x2a>
     8e2:	87 95       	ror	r24
     8e4:	08 95       	ret
     8e6:	12 16       	cp	r1, r18
     8e8:	13 06       	cpc	r1, r19
     8ea:	14 06       	cpc	r1, r20
     8ec:	55 1f       	adc	r21, r21
     8ee:	f2 cf       	rjmp	.-28     	; 0x8d4 <__fp_split3+0xe>
     8f0:	46 95       	lsr	r20
     8f2:	f1 df       	rcall	.-30     	; 0x8d6 <__fp_splitA>
     8f4:	08 c0       	rjmp	.+16     	; 0x906 <__fp_splitA+0x30>
     8f6:	16 16       	cp	r1, r22
     8f8:	17 06       	cpc	r1, r23
     8fa:	18 06       	cpc	r1, r24
     8fc:	99 1f       	adc	r25, r25
     8fe:	f1 cf       	rjmp	.-30     	; 0x8e2 <__fp_splitA+0xc>
     900:	86 95       	lsr	r24
     902:	71 05       	cpc	r23, r1
     904:	61 05       	cpc	r22, r1
     906:	08 94       	sec
     908:	08 95       	ret

0000090a <__fp_zero>:
     90a:	e8 94       	clt

0000090c <__fp_szero>:
     90c:	bb 27       	eor	r27, r27
     90e:	66 27       	eor	r22, r22
     910:	77 27       	eor	r23, r23
     912:	cb 01       	movw	r24, r22
     914:	97 f9       	bld	r25, 7
     916:	08 95       	ret

00000918 <__mulsf3>:
     918:	0e 94 9f 04 	call	0x93e	; 0x93e <__mulsf3x>
     91c:	0c 94 52 04 	jmp	0x8a4	; 0x8a4 <__fp_round>
     920:	0e 94 44 04 	call	0x888	; 0x888 <__fp_pscA>
     924:	38 f0       	brcs	.+14     	; 0x934 <__mulsf3+0x1c>
     926:	0e 94 4b 04 	call	0x896	; 0x896 <__fp_pscB>
     92a:	20 f0       	brcs	.+8      	; 0x934 <__mulsf3+0x1c>
     92c:	95 23       	and	r25, r21
     92e:	11 f0       	breq	.+4      	; 0x934 <__mulsf3+0x1c>
     930:	0c 94 3b 04 	jmp	0x876	; 0x876 <__fp_inf>
     934:	0c 94 41 04 	jmp	0x882	; 0x882 <__fp_nan>
     938:	11 24       	eor	r1, r1
     93a:	0c 94 86 04 	jmp	0x90c	; 0x90c <__fp_szero>

0000093e <__mulsf3x>:
     93e:	0e 94 63 04 	call	0x8c6	; 0x8c6 <__fp_split3>
     942:	70 f3       	brcs	.-36     	; 0x920 <__mulsf3+0x8>

00000944 <__mulsf3_pse>:
     944:	95 9f       	mul	r25, r21
     946:	c1 f3       	breq	.-16     	; 0x938 <__mulsf3+0x20>
     948:	95 0f       	add	r25, r21
     94a:	50 e0       	ldi	r21, 0x00	; 0
     94c:	55 1f       	adc	r21, r21
     94e:	62 9f       	mul	r22, r18
     950:	f0 01       	movw	r30, r0
     952:	72 9f       	mul	r23, r18
     954:	bb 27       	eor	r27, r27
     956:	f0 0d       	add	r31, r0
     958:	b1 1d       	adc	r27, r1
     95a:	63 9f       	mul	r22, r19
     95c:	aa 27       	eor	r26, r26
     95e:	f0 0d       	add	r31, r0
     960:	b1 1d       	adc	r27, r1
     962:	aa 1f       	adc	r26, r26
     964:	64 9f       	mul	r22, r20
     966:	66 27       	eor	r22, r22
     968:	b0 0d       	add	r27, r0
     96a:	a1 1d       	adc	r26, r1
     96c:	66 1f       	adc	r22, r22
     96e:	82 9f       	mul	r24, r18
     970:	22 27       	eor	r18, r18
     972:	b0 0d       	add	r27, r0
     974:	a1 1d       	adc	r26, r1
     976:	62 1f       	adc	r22, r18
     978:	73 9f       	mul	r23, r19
     97a:	b0 0d       	add	r27, r0
     97c:	a1 1d       	adc	r26, r1
     97e:	62 1f       	adc	r22, r18
     980:	83 9f       	mul	r24, r19
     982:	a0 0d       	add	r26, r0
     984:	61 1d       	adc	r22, r1
     986:	22 1f       	adc	r18, r18
     988:	74 9f       	mul	r23, r20
     98a:	33 27       	eor	r19, r19
     98c:	a0 0d       	add	r26, r0
     98e:	61 1d       	adc	r22, r1
     990:	23 1f       	adc	r18, r19
     992:	84 9f       	mul	r24, r20
     994:	60 0d       	add	r22, r0
     996:	21 1d       	adc	r18, r1
     998:	82 2f       	mov	r24, r18
     99a:	76 2f       	mov	r23, r22
     99c:	6a 2f       	mov	r22, r26
     99e:	11 24       	eor	r1, r1
     9a0:	9f 57       	subi	r25, 0x7F	; 127
     9a2:	50 40       	sbci	r21, 0x00	; 0
     9a4:	9a f0       	brmi	.+38     	; 0x9cc <__mulsf3_pse+0x88>
     9a6:	f1 f0       	breq	.+60     	; 0x9e4 <__mulsf3_pse+0xa0>
     9a8:	88 23       	and	r24, r24
     9aa:	4a f0       	brmi	.+18     	; 0x9be <__mulsf3_pse+0x7a>
     9ac:	ee 0f       	add	r30, r30
     9ae:	ff 1f       	adc	r31, r31
     9b0:	bb 1f       	adc	r27, r27
     9b2:	66 1f       	adc	r22, r22
     9b4:	77 1f       	adc	r23, r23
     9b6:	88 1f       	adc	r24, r24
     9b8:	91 50       	subi	r25, 0x01	; 1
     9ba:	50 40       	sbci	r21, 0x00	; 0
     9bc:	a9 f7       	brne	.-22     	; 0x9a8 <__mulsf3_pse+0x64>
     9be:	9e 3f       	cpi	r25, 0xFE	; 254
     9c0:	51 05       	cpc	r21, r1
     9c2:	80 f0       	brcs	.+32     	; 0x9e4 <__mulsf3_pse+0xa0>
     9c4:	0c 94 3b 04 	jmp	0x876	; 0x876 <__fp_inf>
     9c8:	0c 94 86 04 	jmp	0x90c	; 0x90c <__fp_szero>
     9cc:	5f 3f       	cpi	r21, 0xFF	; 255
     9ce:	e4 f3       	brlt	.-8      	; 0x9c8 <__mulsf3_pse+0x84>
     9d0:	98 3e       	cpi	r25, 0xE8	; 232
     9d2:	d4 f3       	brlt	.-12     	; 0x9c8 <__mulsf3_pse+0x84>
     9d4:	86 95       	lsr	r24
     9d6:	77 95       	ror	r23
     9d8:	67 95       	ror	r22
     9da:	b7 95       	ror	r27
     9dc:	f7 95       	ror	r31
     9de:	e7 95       	ror	r30
     9e0:	9f 5f       	subi	r25, 0xFF	; 255
     9e2:	c1 f7       	brne	.-16     	; 0x9d4 <__mulsf3_pse+0x90>
     9e4:	fe 2b       	or	r31, r30
     9e6:	88 0f       	add	r24, r24
     9e8:	91 1d       	adc	r25, r1
     9ea:	96 95       	lsr	r25
     9ec:	87 95       	ror	r24
     9ee:	97 f9       	bld	r25, 7
     9f0:	08 95       	ret

000009f2 <__udivmodsi4>:
     9f2:	a1 e2       	ldi	r26, 0x21	; 33
     9f4:	1a 2e       	mov	r1, r26
     9f6:	aa 1b       	sub	r26, r26
     9f8:	bb 1b       	sub	r27, r27
     9fa:	fd 01       	movw	r30, r26
     9fc:	0d c0       	rjmp	.+26     	; 0xa18 <__udivmodsi4_ep>

000009fe <__udivmodsi4_loop>:
     9fe:	aa 1f       	adc	r26, r26
     a00:	bb 1f       	adc	r27, r27
     a02:	ee 1f       	adc	r30, r30
     a04:	ff 1f       	adc	r31, r31
     a06:	a2 17       	cp	r26, r18
     a08:	b3 07       	cpc	r27, r19
     a0a:	e4 07       	cpc	r30, r20
     a0c:	f5 07       	cpc	r31, r21
     a0e:	20 f0       	brcs	.+8      	; 0xa18 <__udivmodsi4_ep>
     a10:	a2 1b       	sub	r26, r18
     a12:	b3 0b       	sbc	r27, r19
     a14:	e4 0b       	sbc	r30, r20
     a16:	f5 0b       	sbc	r31, r21

00000a18 <__udivmodsi4_ep>:
     a18:	66 1f       	adc	r22, r22
     a1a:	77 1f       	adc	r23, r23
     a1c:	88 1f       	adc	r24, r24
     a1e:	99 1f       	adc	r25, r25
     a20:	1a 94       	dec	r1
     a22:	69 f7       	brne	.-38     	; 0x9fe <__udivmodsi4_loop>
     a24:	60 95       	com	r22
     a26:	70 95       	com	r23
     a28:	80 95       	com	r24
     a2a:	90 95       	com	r25
     a2c:	9b 01       	movw	r18, r22
     a2e:	ac 01       	movw	r20, r24
     a30:	bd 01       	movw	r22, r26
     a32:	cf 01       	movw	r24, r30
     a34:	08 95       	ret

00000a36 <__muluhisi3>:
     a36:	0e 94 26 05 	call	0xa4c	; 0xa4c <__umulhisi3>
     a3a:	a5 9f       	mul	r26, r21
     a3c:	90 0d       	add	r25, r0
     a3e:	b4 9f       	mul	r27, r20
     a40:	90 0d       	add	r25, r0
     a42:	a4 9f       	mul	r26, r20
     a44:	80 0d       	add	r24, r0
     a46:	91 1d       	adc	r25, r1
     a48:	11 24       	eor	r1, r1
     a4a:	08 95       	ret

00000a4c <__umulhisi3>:
     a4c:	a2 9f       	mul	r26, r18
     a4e:	b0 01       	movw	r22, r0
     a50:	b3 9f       	mul	r27, r19
     a52:	c0 01       	movw	r24, r0
     a54:	a3 9f       	mul	r26, r19
     a56:	70 0d       	add	r23, r0
     a58:	81 1d       	adc	r24, r1
     a5a:	11 24       	eor	r1, r1
     a5c:	91 1d       	adc	r25, r1
     a5e:	b2 9f       	mul	r27, r18
     a60:	70 0d       	add	r23, r0
     a62:	81 1d       	adc	r24, r1
     a64:	11 24       	eor	r1, r1
     a66:	91 1d       	adc	r25, r1
     a68:	08 95       	ret

00000a6a <strcat>:
     a6a:	fb 01       	movw	r30, r22
     a6c:	dc 01       	movw	r26, r24
     a6e:	0d 90       	ld	r0, X+
     a70:	00 20       	and	r0, r0
     a72:	e9 f7       	brne	.-6      	; 0xa6e <strcat+0x4>
     a74:	11 97       	sbiw	r26, 0x01	; 1
     a76:	01 90       	ld	r0, Z+
     a78:	0d 92       	st	X+, r0
     a7a:	00 20       	and	r0, r0
     a7c:	e1 f7       	brne	.-8      	; 0xa76 <strcat+0xc>
     a7e:	08 95       	ret

00000a80 <strcpy>:
     a80:	fb 01       	movw	r30, r22
     a82:	dc 01       	movw	r26, r24
     a84:	01 90       	ld	r0, Z+
     a86:	0d 92       	st	X+, r0
     a88:	00 20       	and	r0, r0
     a8a:	e1 f7       	brne	.-8      	; 0xa84 <strcpy+0x4>
     a8c:	08 95       	ret

00000a8e <sprintf>:
     a8e:	ae e0       	ldi	r26, 0x0E	; 14
     a90:	b0 e0       	ldi	r27, 0x00	; 0
     a92:	ed e4       	ldi	r30, 0x4D	; 77
     a94:	f5 e0       	ldi	r31, 0x05	; 5
     a96:	0c 94 08 08 	jmp	0x1010	; 0x1010 <__prologue_saves__+0x1c>
     a9a:	0d 89       	ldd	r16, Y+21	; 0x15
     a9c:	1e 89       	ldd	r17, Y+22	; 0x16
     a9e:	86 e0       	ldi	r24, 0x06	; 6
     aa0:	8c 83       	std	Y+4, r24	; 0x04
     aa2:	1a 83       	std	Y+2, r17	; 0x02
     aa4:	09 83       	std	Y+1, r16	; 0x01
     aa6:	8f ef       	ldi	r24, 0xFF	; 255
     aa8:	9f e7       	ldi	r25, 0x7F	; 127
     aaa:	9e 83       	std	Y+6, r25	; 0x06
     aac:	8d 83       	std	Y+5, r24	; 0x05
     aae:	ae 01       	movw	r20, r28
     ab0:	47 5e       	subi	r20, 0xE7	; 231
     ab2:	5f 4f       	sbci	r21, 0xFF	; 255
     ab4:	6f 89       	ldd	r22, Y+23	; 0x17
     ab6:	78 8d       	ldd	r23, Y+24	; 0x18
     ab8:	ce 01       	movw	r24, r28
     aba:	01 96       	adiw	r24, 0x01	; 1
     abc:	0e 94 69 05 	call	0xad2	; 0xad2 <vfprintf>
     ac0:	ef 81       	ldd	r30, Y+7	; 0x07
     ac2:	f8 85       	ldd	r31, Y+8	; 0x08
     ac4:	e0 0f       	add	r30, r16
     ac6:	f1 1f       	adc	r31, r17
     ac8:	10 82       	st	Z, r1
     aca:	2e 96       	adiw	r28, 0x0e	; 14
     acc:	e4 e0       	ldi	r30, 0x04	; 4
     ace:	0c 94 24 08 	jmp	0x1048	; 0x1048 <__epilogue_restores__+0x1c>

00000ad2 <vfprintf>:
     ad2:	ab e0       	ldi	r26, 0x0B	; 11
     ad4:	b0 e0       	ldi	r27, 0x00	; 0
     ad6:	ef e6       	ldi	r30, 0x6F	; 111
     ad8:	f5 e0       	ldi	r31, 0x05	; 5
     ada:	0c 94 fa 07 	jmp	0xff4	; 0xff4 <__prologue_saves__>
     ade:	6c 01       	movw	r12, r24
     ae0:	7b 01       	movw	r14, r22
     ae2:	8a 01       	movw	r16, r20
     ae4:	fc 01       	movw	r30, r24
     ae6:	17 82       	std	Z+7, r1	; 0x07
     ae8:	16 82       	std	Z+6, r1	; 0x06
     aea:	83 81       	ldd	r24, Z+3	; 0x03
     aec:	81 ff       	sbrs	r24, 1
     aee:	cc c1       	rjmp	.+920    	; 0xe88 <vfprintf+0x3b6>
     af0:	ce 01       	movw	r24, r28
     af2:	01 96       	adiw	r24, 0x01	; 1
     af4:	3c 01       	movw	r6, r24
     af6:	f6 01       	movw	r30, r12
     af8:	93 81       	ldd	r25, Z+3	; 0x03
     afa:	f7 01       	movw	r30, r14
     afc:	93 fd       	sbrc	r25, 3
     afe:	85 91       	lpm	r24, Z+
     b00:	93 ff       	sbrs	r25, 3
     b02:	81 91       	ld	r24, Z+
     b04:	7f 01       	movw	r14, r30
     b06:	88 23       	and	r24, r24
     b08:	09 f4       	brne	.+2      	; 0xb0c <vfprintf+0x3a>
     b0a:	ba c1       	rjmp	.+884    	; 0xe80 <vfprintf+0x3ae>
     b0c:	85 32       	cpi	r24, 0x25	; 37
     b0e:	39 f4       	brne	.+14     	; 0xb1e <vfprintf+0x4c>
     b10:	93 fd       	sbrc	r25, 3
     b12:	85 91       	lpm	r24, Z+
     b14:	93 ff       	sbrs	r25, 3
     b16:	81 91       	ld	r24, Z+
     b18:	7f 01       	movw	r14, r30
     b1a:	85 32       	cpi	r24, 0x25	; 37
     b1c:	29 f4       	brne	.+10     	; 0xb28 <vfprintf+0x56>
     b1e:	b6 01       	movw	r22, r12
     b20:	90 e0       	ldi	r25, 0x00	; 0
     b22:	0e 94 60 07 	call	0xec0	; 0xec0 <fputc>
     b26:	e7 cf       	rjmp	.-50     	; 0xaf6 <vfprintf+0x24>
     b28:	91 2c       	mov	r9, r1
     b2a:	21 2c       	mov	r2, r1
     b2c:	31 2c       	mov	r3, r1
     b2e:	ff e1       	ldi	r31, 0x1F	; 31
     b30:	f3 15       	cp	r31, r3
     b32:	d8 f0       	brcs	.+54     	; 0xb6a <vfprintf+0x98>
     b34:	8b 32       	cpi	r24, 0x2B	; 43
     b36:	79 f0       	breq	.+30     	; 0xb56 <vfprintf+0x84>
     b38:	38 f4       	brcc	.+14     	; 0xb48 <vfprintf+0x76>
     b3a:	80 32       	cpi	r24, 0x20	; 32
     b3c:	79 f0       	breq	.+30     	; 0xb5c <vfprintf+0x8a>
     b3e:	83 32       	cpi	r24, 0x23	; 35
     b40:	a1 f4       	brne	.+40     	; 0xb6a <vfprintf+0x98>
     b42:	23 2d       	mov	r18, r3
     b44:	20 61       	ori	r18, 0x10	; 16
     b46:	1d c0       	rjmp	.+58     	; 0xb82 <vfprintf+0xb0>
     b48:	8d 32       	cpi	r24, 0x2D	; 45
     b4a:	61 f0       	breq	.+24     	; 0xb64 <vfprintf+0x92>
     b4c:	80 33       	cpi	r24, 0x30	; 48
     b4e:	69 f4       	brne	.+26     	; 0xb6a <vfprintf+0x98>
     b50:	23 2d       	mov	r18, r3
     b52:	21 60       	ori	r18, 0x01	; 1
     b54:	16 c0       	rjmp	.+44     	; 0xb82 <vfprintf+0xb0>
     b56:	83 2d       	mov	r24, r3
     b58:	82 60       	ori	r24, 0x02	; 2
     b5a:	38 2e       	mov	r3, r24
     b5c:	e3 2d       	mov	r30, r3
     b5e:	e4 60       	ori	r30, 0x04	; 4
     b60:	3e 2e       	mov	r3, r30
     b62:	2a c0       	rjmp	.+84     	; 0xbb8 <vfprintf+0xe6>
     b64:	f3 2d       	mov	r31, r3
     b66:	f8 60       	ori	r31, 0x08	; 8
     b68:	1d c0       	rjmp	.+58     	; 0xba4 <vfprintf+0xd2>
     b6a:	37 fc       	sbrc	r3, 7
     b6c:	2d c0       	rjmp	.+90     	; 0xbc8 <vfprintf+0xf6>
     b6e:	20 ed       	ldi	r18, 0xD0	; 208
     b70:	28 0f       	add	r18, r24
     b72:	2a 30       	cpi	r18, 0x0A	; 10
     b74:	40 f0       	brcs	.+16     	; 0xb86 <vfprintf+0xb4>
     b76:	8e 32       	cpi	r24, 0x2E	; 46
     b78:	b9 f4       	brne	.+46     	; 0xba8 <vfprintf+0xd6>
     b7a:	36 fc       	sbrc	r3, 6
     b7c:	81 c1       	rjmp	.+770    	; 0xe80 <vfprintf+0x3ae>
     b7e:	23 2d       	mov	r18, r3
     b80:	20 64       	ori	r18, 0x40	; 64
     b82:	32 2e       	mov	r3, r18
     b84:	19 c0       	rjmp	.+50     	; 0xbb8 <vfprintf+0xe6>
     b86:	36 fe       	sbrs	r3, 6
     b88:	06 c0       	rjmp	.+12     	; 0xb96 <vfprintf+0xc4>
     b8a:	8a e0       	ldi	r24, 0x0A	; 10
     b8c:	98 9e       	mul	r9, r24
     b8e:	20 0d       	add	r18, r0
     b90:	11 24       	eor	r1, r1
     b92:	92 2e       	mov	r9, r18
     b94:	11 c0       	rjmp	.+34     	; 0xbb8 <vfprintf+0xe6>
     b96:	ea e0       	ldi	r30, 0x0A	; 10
     b98:	2e 9e       	mul	r2, r30
     b9a:	20 0d       	add	r18, r0
     b9c:	11 24       	eor	r1, r1
     b9e:	22 2e       	mov	r2, r18
     ba0:	f3 2d       	mov	r31, r3
     ba2:	f0 62       	ori	r31, 0x20	; 32
     ba4:	3f 2e       	mov	r3, r31
     ba6:	08 c0       	rjmp	.+16     	; 0xbb8 <vfprintf+0xe6>
     ba8:	8c 36       	cpi	r24, 0x6C	; 108
     baa:	21 f4       	brne	.+8      	; 0xbb4 <vfprintf+0xe2>
     bac:	83 2d       	mov	r24, r3
     bae:	80 68       	ori	r24, 0x80	; 128
     bb0:	38 2e       	mov	r3, r24
     bb2:	02 c0       	rjmp	.+4      	; 0xbb8 <vfprintf+0xe6>
     bb4:	88 36       	cpi	r24, 0x68	; 104
     bb6:	41 f4       	brne	.+16     	; 0xbc8 <vfprintf+0xf6>
     bb8:	f7 01       	movw	r30, r14
     bba:	93 fd       	sbrc	r25, 3
     bbc:	85 91       	lpm	r24, Z+
     bbe:	93 ff       	sbrs	r25, 3
     bc0:	81 91       	ld	r24, Z+
     bc2:	7f 01       	movw	r14, r30
     bc4:	81 11       	cpse	r24, r1
     bc6:	b3 cf       	rjmp	.-154    	; 0xb2e <vfprintf+0x5c>
     bc8:	98 2f       	mov	r25, r24
     bca:	9f 7d       	andi	r25, 0xDF	; 223
     bcc:	95 54       	subi	r25, 0x45	; 69
     bce:	93 30       	cpi	r25, 0x03	; 3
     bd0:	28 f4       	brcc	.+10     	; 0xbdc <vfprintf+0x10a>
     bd2:	0c 5f       	subi	r16, 0xFC	; 252
     bd4:	1f 4f       	sbci	r17, 0xFF	; 255
     bd6:	9f e3       	ldi	r25, 0x3F	; 63
     bd8:	99 83       	std	Y+1, r25	; 0x01
     bda:	0d c0       	rjmp	.+26     	; 0xbf6 <vfprintf+0x124>
     bdc:	83 36       	cpi	r24, 0x63	; 99
     bde:	31 f0       	breq	.+12     	; 0xbec <vfprintf+0x11a>
     be0:	83 37       	cpi	r24, 0x73	; 115
     be2:	71 f0       	breq	.+28     	; 0xc00 <vfprintf+0x12e>
     be4:	83 35       	cpi	r24, 0x53	; 83
     be6:	09 f0       	breq	.+2      	; 0xbea <vfprintf+0x118>
     be8:	59 c0       	rjmp	.+178    	; 0xc9c <vfprintf+0x1ca>
     bea:	21 c0       	rjmp	.+66     	; 0xc2e <vfprintf+0x15c>
     bec:	f8 01       	movw	r30, r16
     bee:	80 81       	ld	r24, Z
     bf0:	89 83       	std	Y+1, r24	; 0x01
     bf2:	0e 5f       	subi	r16, 0xFE	; 254
     bf4:	1f 4f       	sbci	r17, 0xFF	; 255
     bf6:	88 24       	eor	r8, r8
     bf8:	83 94       	inc	r8
     bfa:	91 2c       	mov	r9, r1
     bfc:	53 01       	movw	r10, r6
     bfe:	13 c0       	rjmp	.+38     	; 0xc26 <vfprintf+0x154>
     c00:	28 01       	movw	r4, r16
     c02:	f2 e0       	ldi	r31, 0x02	; 2
     c04:	4f 0e       	add	r4, r31
     c06:	51 1c       	adc	r5, r1
     c08:	f8 01       	movw	r30, r16
     c0a:	a0 80       	ld	r10, Z
     c0c:	b1 80       	ldd	r11, Z+1	; 0x01
     c0e:	36 fe       	sbrs	r3, 6
     c10:	03 c0       	rjmp	.+6      	; 0xc18 <vfprintf+0x146>
     c12:	69 2d       	mov	r22, r9
     c14:	70 e0       	ldi	r23, 0x00	; 0
     c16:	02 c0       	rjmp	.+4      	; 0xc1c <vfprintf+0x14a>
     c18:	6f ef       	ldi	r22, 0xFF	; 255
     c1a:	7f ef       	ldi	r23, 0xFF	; 255
     c1c:	c5 01       	movw	r24, r10
     c1e:	0e 94 55 07 	call	0xeaa	; 0xeaa <strnlen>
     c22:	4c 01       	movw	r8, r24
     c24:	82 01       	movw	r16, r4
     c26:	f3 2d       	mov	r31, r3
     c28:	ff 77       	andi	r31, 0x7F	; 127
     c2a:	3f 2e       	mov	r3, r31
     c2c:	16 c0       	rjmp	.+44     	; 0xc5a <vfprintf+0x188>
     c2e:	28 01       	movw	r4, r16
     c30:	22 e0       	ldi	r18, 0x02	; 2
     c32:	42 0e       	add	r4, r18
     c34:	51 1c       	adc	r5, r1
     c36:	f8 01       	movw	r30, r16
     c38:	a0 80       	ld	r10, Z
     c3a:	b1 80       	ldd	r11, Z+1	; 0x01
     c3c:	36 fe       	sbrs	r3, 6
     c3e:	03 c0       	rjmp	.+6      	; 0xc46 <vfprintf+0x174>
     c40:	69 2d       	mov	r22, r9
     c42:	70 e0       	ldi	r23, 0x00	; 0
     c44:	02 c0       	rjmp	.+4      	; 0xc4a <vfprintf+0x178>
     c46:	6f ef       	ldi	r22, 0xFF	; 255
     c48:	7f ef       	ldi	r23, 0xFF	; 255
     c4a:	c5 01       	movw	r24, r10
     c4c:	0e 94 4a 07 	call	0xe94	; 0xe94 <strnlen_P>
     c50:	4c 01       	movw	r8, r24
     c52:	f3 2d       	mov	r31, r3
     c54:	f0 68       	ori	r31, 0x80	; 128
     c56:	3f 2e       	mov	r3, r31
     c58:	82 01       	movw	r16, r4
     c5a:	33 fc       	sbrc	r3, 3
     c5c:	1b c0       	rjmp	.+54     	; 0xc94 <vfprintf+0x1c2>
     c5e:	82 2d       	mov	r24, r2
     c60:	90 e0       	ldi	r25, 0x00	; 0
     c62:	88 16       	cp	r8, r24
     c64:	99 06       	cpc	r9, r25
     c66:	b0 f4       	brcc	.+44     	; 0xc94 <vfprintf+0x1c2>
     c68:	b6 01       	movw	r22, r12
     c6a:	80 e2       	ldi	r24, 0x20	; 32
     c6c:	90 e0       	ldi	r25, 0x00	; 0
     c6e:	0e 94 60 07 	call	0xec0	; 0xec0 <fputc>
     c72:	2a 94       	dec	r2
     c74:	f4 cf       	rjmp	.-24     	; 0xc5e <vfprintf+0x18c>
     c76:	f5 01       	movw	r30, r10
     c78:	37 fc       	sbrc	r3, 7
     c7a:	85 91       	lpm	r24, Z+
     c7c:	37 fe       	sbrs	r3, 7
     c7e:	81 91       	ld	r24, Z+
     c80:	5f 01       	movw	r10, r30
     c82:	b6 01       	movw	r22, r12
     c84:	90 e0       	ldi	r25, 0x00	; 0
     c86:	0e 94 60 07 	call	0xec0	; 0xec0 <fputc>
     c8a:	21 10       	cpse	r2, r1
     c8c:	2a 94       	dec	r2
     c8e:	21 e0       	ldi	r18, 0x01	; 1
     c90:	82 1a       	sub	r8, r18
     c92:	91 08       	sbc	r9, r1
     c94:	81 14       	cp	r8, r1
     c96:	91 04       	cpc	r9, r1
     c98:	71 f7       	brne	.-36     	; 0xc76 <vfprintf+0x1a4>
     c9a:	e8 c0       	rjmp	.+464    	; 0xe6c <vfprintf+0x39a>
     c9c:	84 36       	cpi	r24, 0x64	; 100
     c9e:	11 f0       	breq	.+4      	; 0xca4 <vfprintf+0x1d2>
     ca0:	89 36       	cpi	r24, 0x69	; 105
     ca2:	41 f5       	brne	.+80     	; 0xcf4 <vfprintf+0x222>
     ca4:	f8 01       	movw	r30, r16
     ca6:	37 fe       	sbrs	r3, 7
     ca8:	07 c0       	rjmp	.+14     	; 0xcb8 <vfprintf+0x1e6>
     caa:	60 81       	ld	r22, Z
     cac:	71 81       	ldd	r23, Z+1	; 0x01
     cae:	82 81       	ldd	r24, Z+2	; 0x02
     cb0:	93 81       	ldd	r25, Z+3	; 0x03
     cb2:	0c 5f       	subi	r16, 0xFC	; 252
     cb4:	1f 4f       	sbci	r17, 0xFF	; 255
     cb6:	08 c0       	rjmp	.+16     	; 0xcc8 <vfprintf+0x1f6>
     cb8:	60 81       	ld	r22, Z
     cba:	71 81       	ldd	r23, Z+1	; 0x01
     cbc:	07 2e       	mov	r0, r23
     cbe:	00 0c       	add	r0, r0
     cc0:	88 0b       	sbc	r24, r24
     cc2:	99 0b       	sbc	r25, r25
     cc4:	0e 5f       	subi	r16, 0xFE	; 254
     cc6:	1f 4f       	sbci	r17, 0xFF	; 255
     cc8:	f3 2d       	mov	r31, r3
     cca:	ff 76       	andi	r31, 0x6F	; 111
     ccc:	3f 2e       	mov	r3, r31
     cce:	97 ff       	sbrs	r25, 7
     cd0:	09 c0       	rjmp	.+18     	; 0xce4 <vfprintf+0x212>
     cd2:	90 95       	com	r25
     cd4:	80 95       	com	r24
     cd6:	70 95       	com	r23
     cd8:	61 95       	neg	r22
     cda:	7f 4f       	sbci	r23, 0xFF	; 255
     cdc:	8f 4f       	sbci	r24, 0xFF	; 255
     cde:	9f 4f       	sbci	r25, 0xFF	; 255
     ce0:	f0 68       	ori	r31, 0x80	; 128
     ce2:	3f 2e       	mov	r3, r31
     ce4:	2a e0       	ldi	r18, 0x0A	; 10
     ce6:	30 e0       	ldi	r19, 0x00	; 0
     ce8:	a3 01       	movw	r20, r6
     cea:	0e 94 9c 07 	call	0xf38	; 0xf38 <__ultoa_invert>
     cee:	88 2e       	mov	r8, r24
     cf0:	86 18       	sub	r8, r6
     cf2:	45 c0       	rjmp	.+138    	; 0xd7e <vfprintf+0x2ac>
     cf4:	85 37       	cpi	r24, 0x75	; 117
     cf6:	31 f4       	brne	.+12     	; 0xd04 <vfprintf+0x232>
     cf8:	23 2d       	mov	r18, r3
     cfa:	2f 7e       	andi	r18, 0xEF	; 239
     cfc:	b2 2e       	mov	r11, r18
     cfe:	2a e0       	ldi	r18, 0x0A	; 10
     d00:	30 e0       	ldi	r19, 0x00	; 0
     d02:	25 c0       	rjmp	.+74     	; 0xd4e <vfprintf+0x27c>
     d04:	93 2d       	mov	r25, r3
     d06:	99 7f       	andi	r25, 0xF9	; 249
     d08:	b9 2e       	mov	r11, r25
     d0a:	8f 36       	cpi	r24, 0x6F	; 111
     d0c:	c1 f0       	breq	.+48     	; 0xd3e <vfprintf+0x26c>
     d0e:	18 f4       	brcc	.+6      	; 0xd16 <vfprintf+0x244>
     d10:	88 35       	cpi	r24, 0x58	; 88
     d12:	79 f0       	breq	.+30     	; 0xd32 <vfprintf+0x260>
     d14:	b5 c0       	rjmp	.+362    	; 0xe80 <vfprintf+0x3ae>
     d16:	80 37       	cpi	r24, 0x70	; 112
     d18:	19 f0       	breq	.+6      	; 0xd20 <vfprintf+0x24e>
     d1a:	88 37       	cpi	r24, 0x78	; 120
     d1c:	21 f0       	breq	.+8      	; 0xd26 <vfprintf+0x254>
     d1e:	b0 c0       	rjmp	.+352    	; 0xe80 <vfprintf+0x3ae>
     d20:	e9 2f       	mov	r30, r25
     d22:	e0 61       	ori	r30, 0x10	; 16
     d24:	be 2e       	mov	r11, r30
     d26:	b4 fe       	sbrs	r11, 4
     d28:	0d c0       	rjmp	.+26     	; 0xd44 <vfprintf+0x272>
     d2a:	fb 2d       	mov	r31, r11
     d2c:	f4 60       	ori	r31, 0x04	; 4
     d2e:	bf 2e       	mov	r11, r31
     d30:	09 c0       	rjmp	.+18     	; 0xd44 <vfprintf+0x272>
     d32:	34 fe       	sbrs	r3, 4
     d34:	0a c0       	rjmp	.+20     	; 0xd4a <vfprintf+0x278>
     d36:	29 2f       	mov	r18, r25
     d38:	26 60       	ori	r18, 0x06	; 6
     d3a:	b2 2e       	mov	r11, r18
     d3c:	06 c0       	rjmp	.+12     	; 0xd4a <vfprintf+0x278>
     d3e:	28 e0       	ldi	r18, 0x08	; 8
     d40:	30 e0       	ldi	r19, 0x00	; 0
     d42:	05 c0       	rjmp	.+10     	; 0xd4e <vfprintf+0x27c>
     d44:	20 e1       	ldi	r18, 0x10	; 16
     d46:	30 e0       	ldi	r19, 0x00	; 0
     d48:	02 c0       	rjmp	.+4      	; 0xd4e <vfprintf+0x27c>
     d4a:	20 e1       	ldi	r18, 0x10	; 16
     d4c:	32 e0       	ldi	r19, 0x02	; 2
     d4e:	f8 01       	movw	r30, r16
     d50:	b7 fe       	sbrs	r11, 7
     d52:	07 c0       	rjmp	.+14     	; 0xd62 <vfprintf+0x290>
     d54:	60 81       	ld	r22, Z
     d56:	71 81       	ldd	r23, Z+1	; 0x01
     d58:	82 81       	ldd	r24, Z+2	; 0x02
     d5a:	93 81       	ldd	r25, Z+3	; 0x03
     d5c:	0c 5f       	subi	r16, 0xFC	; 252
     d5e:	1f 4f       	sbci	r17, 0xFF	; 255
     d60:	06 c0       	rjmp	.+12     	; 0xd6e <vfprintf+0x29c>
     d62:	60 81       	ld	r22, Z
     d64:	71 81       	ldd	r23, Z+1	; 0x01
     d66:	80 e0       	ldi	r24, 0x00	; 0
     d68:	90 e0       	ldi	r25, 0x00	; 0
     d6a:	0e 5f       	subi	r16, 0xFE	; 254
     d6c:	1f 4f       	sbci	r17, 0xFF	; 255
     d6e:	a3 01       	movw	r20, r6
     d70:	0e 94 9c 07 	call	0xf38	; 0xf38 <__ultoa_invert>
     d74:	88 2e       	mov	r8, r24
     d76:	86 18       	sub	r8, r6
     d78:	fb 2d       	mov	r31, r11
     d7a:	ff 77       	andi	r31, 0x7F	; 127
     d7c:	3f 2e       	mov	r3, r31
     d7e:	36 fe       	sbrs	r3, 6
     d80:	0d c0       	rjmp	.+26     	; 0xd9c <vfprintf+0x2ca>
     d82:	23 2d       	mov	r18, r3
     d84:	2e 7f       	andi	r18, 0xFE	; 254
     d86:	a2 2e       	mov	r10, r18
     d88:	89 14       	cp	r8, r9
     d8a:	58 f4       	brcc	.+22     	; 0xda2 <vfprintf+0x2d0>
     d8c:	34 fe       	sbrs	r3, 4
     d8e:	0b c0       	rjmp	.+22     	; 0xda6 <vfprintf+0x2d4>
     d90:	32 fc       	sbrc	r3, 2
     d92:	09 c0       	rjmp	.+18     	; 0xda6 <vfprintf+0x2d4>
     d94:	83 2d       	mov	r24, r3
     d96:	8e 7e       	andi	r24, 0xEE	; 238
     d98:	a8 2e       	mov	r10, r24
     d9a:	05 c0       	rjmp	.+10     	; 0xda6 <vfprintf+0x2d4>
     d9c:	b8 2c       	mov	r11, r8
     d9e:	a3 2c       	mov	r10, r3
     da0:	03 c0       	rjmp	.+6      	; 0xda8 <vfprintf+0x2d6>
     da2:	b8 2c       	mov	r11, r8
     da4:	01 c0       	rjmp	.+2      	; 0xda8 <vfprintf+0x2d6>
     da6:	b9 2c       	mov	r11, r9
     da8:	a4 fe       	sbrs	r10, 4
     daa:	0f c0       	rjmp	.+30     	; 0xdca <vfprintf+0x2f8>
     dac:	fe 01       	movw	r30, r28
     dae:	e8 0d       	add	r30, r8
     db0:	f1 1d       	adc	r31, r1
     db2:	80 81       	ld	r24, Z
     db4:	80 33       	cpi	r24, 0x30	; 48
     db6:	21 f4       	brne	.+8      	; 0xdc0 <vfprintf+0x2ee>
     db8:	9a 2d       	mov	r25, r10
     dba:	99 7e       	andi	r25, 0xE9	; 233
     dbc:	a9 2e       	mov	r10, r25
     dbe:	09 c0       	rjmp	.+18     	; 0xdd2 <vfprintf+0x300>
     dc0:	a2 fe       	sbrs	r10, 2
     dc2:	06 c0       	rjmp	.+12     	; 0xdd0 <vfprintf+0x2fe>
     dc4:	b3 94       	inc	r11
     dc6:	b3 94       	inc	r11
     dc8:	04 c0       	rjmp	.+8      	; 0xdd2 <vfprintf+0x300>
     dca:	8a 2d       	mov	r24, r10
     dcc:	86 78       	andi	r24, 0x86	; 134
     dce:	09 f0       	breq	.+2      	; 0xdd2 <vfprintf+0x300>
     dd0:	b3 94       	inc	r11
     dd2:	a3 fc       	sbrc	r10, 3
     dd4:	11 c0       	rjmp	.+34     	; 0xdf8 <vfprintf+0x326>
     dd6:	a0 fe       	sbrs	r10, 0
     dd8:	06 c0       	rjmp	.+12     	; 0xde6 <vfprintf+0x314>
     dda:	b2 14       	cp	r11, r2
     ddc:	88 f4       	brcc	.+34     	; 0xe00 <vfprintf+0x32e>
     dde:	28 0c       	add	r2, r8
     de0:	92 2c       	mov	r9, r2
     de2:	9b 18       	sub	r9, r11
     de4:	0e c0       	rjmp	.+28     	; 0xe02 <vfprintf+0x330>
     de6:	b2 14       	cp	r11, r2
     de8:	60 f4       	brcc	.+24     	; 0xe02 <vfprintf+0x330>
     dea:	b6 01       	movw	r22, r12
     dec:	80 e2       	ldi	r24, 0x20	; 32
     dee:	90 e0       	ldi	r25, 0x00	; 0
     df0:	0e 94 60 07 	call	0xec0	; 0xec0 <fputc>
     df4:	b3 94       	inc	r11
     df6:	f7 cf       	rjmp	.-18     	; 0xde6 <vfprintf+0x314>
     df8:	b2 14       	cp	r11, r2
     dfa:	18 f4       	brcc	.+6      	; 0xe02 <vfprintf+0x330>
     dfc:	2b 18       	sub	r2, r11
     dfe:	02 c0       	rjmp	.+4      	; 0xe04 <vfprintf+0x332>
     e00:	98 2c       	mov	r9, r8
     e02:	21 2c       	mov	r2, r1
     e04:	a4 fe       	sbrs	r10, 4
     e06:	10 c0       	rjmp	.+32     	; 0xe28 <vfprintf+0x356>
     e08:	b6 01       	movw	r22, r12
     e0a:	80 e3       	ldi	r24, 0x30	; 48
     e0c:	90 e0       	ldi	r25, 0x00	; 0
     e0e:	0e 94 60 07 	call	0xec0	; 0xec0 <fputc>
     e12:	a2 fe       	sbrs	r10, 2
     e14:	17 c0       	rjmp	.+46     	; 0xe44 <vfprintf+0x372>
     e16:	a1 fc       	sbrc	r10, 1
     e18:	03 c0       	rjmp	.+6      	; 0xe20 <vfprintf+0x34e>
     e1a:	88 e7       	ldi	r24, 0x78	; 120
     e1c:	90 e0       	ldi	r25, 0x00	; 0
     e1e:	02 c0       	rjmp	.+4      	; 0xe24 <vfprintf+0x352>
     e20:	88 e5       	ldi	r24, 0x58	; 88
     e22:	90 e0       	ldi	r25, 0x00	; 0
     e24:	b6 01       	movw	r22, r12
     e26:	0c c0       	rjmp	.+24     	; 0xe40 <vfprintf+0x36e>
     e28:	8a 2d       	mov	r24, r10
     e2a:	86 78       	andi	r24, 0x86	; 134
     e2c:	59 f0       	breq	.+22     	; 0xe44 <vfprintf+0x372>
     e2e:	a1 fe       	sbrs	r10, 1
     e30:	02 c0       	rjmp	.+4      	; 0xe36 <vfprintf+0x364>
     e32:	8b e2       	ldi	r24, 0x2B	; 43
     e34:	01 c0       	rjmp	.+2      	; 0xe38 <vfprintf+0x366>
     e36:	80 e2       	ldi	r24, 0x20	; 32
     e38:	a7 fc       	sbrc	r10, 7
     e3a:	8d e2       	ldi	r24, 0x2D	; 45
     e3c:	b6 01       	movw	r22, r12
     e3e:	90 e0       	ldi	r25, 0x00	; 0
     e40:	0e 94 60 07 	call	0xec0	; 0xec0 <fputc>
     e44:	89 14       	cp	r8, r9
     e46:	38 f4       	brcc	.+14     	; 0xe56 <vfprintf+0x384>
     e48:	b6 01       	movw	r22, r12
     e4a:	80 e3       	ldi	r24, 0x30	; 48
     e4c:	90 e0       	ldi	r25, 0x00	; 0
     e4e:	0e 94 60 07 	call	0xec0	; 0xec0 <fputc>
     e52:	9a 94       	dec	r9
     e54:	f7 cf       	rjmp	.-18     	; 0xe44 <vfprintf+0x372>
     e56:	8a 94       	dec	r8
     e58:	f3 01       	movw	r30, r6
     e5a:	e8 0d       	add	r30, r8
     e5c:	f1 1d       	adc	r31, r1
     e5e:	80 81       	ld	r24, Z
     e60:	b6 01       	movw	r22, r12
     e62:	90 e0       	ldi	r25, 0x00	; 0
     e64:	0e 94 60 07 	call	0xec0	; 0xec0 <fputc>
     e68:	81 10       	cpse	r8, r1
     e6a:	f5 cf       	rjmp	.-22     	; 0xe56 <vfprintf+0x384>
     e6c:	22 20       	and	r2, r2
     e6e:	09 f4       	brne	.+2      	; 0xe72 <vfprintf+0x3a0>
     e70:	42 ce       	rjmp	.-892    	; 0xaf6 <vfprintf+0x24>
     e72:	b6 01       	movw	r22, r12
     e74:	80 e2       	ldi	r24, 0x20	; 32
     e76:	90 e0       	ldi	r25, 0x00	; 0
     e78:	0e 94 60 07 	call	0xec0	; 0xec0 <fputc>
     e7c:	2a 94       	dec	r2
     e7e:	f6 cf       	rjmp	.-20     	; 0xe6c <vfprintf+0x39a>
     e80:	f6 01       	movw	r30, r12
     e82:	86 81       	ldd	r24, Z+6	; 0x06
     e84:	97 81       	ldd	r25, Z+7	; 0x07
     e86:	02 c0       	rjmp	.+4      	; 0xe8c <vfprintf+0x3ba>
     e88:	8f ef       	ldi	r24, 0xFF	; 255
     e8a:	9f ef       	ldi	r25, 0xFF	; 255
     e8c:	2b 96       	adiw	r28, 0x0b	; 11
     e8e:	e2 e1       	ldi	r30, 0x12	; 18
     e90:	0c 94 16 08 	jmp	0x102c	; 0x102c <__epilogue_restores__>

00000e94 <strnlen_P>:
     e94:	fc 01       	movw	r30, r24
     e96:	05 90       	lpm	r0, Z+
     e98:	61 50       	subi	r22, 0x01	; 1
     e9a:	70 40       	sbci	r23, 0x00	; 0
     e9c:	01 10       	cpse	r0, r1
     e9e:	d8 f7       	brcc	.-10     	; 0xe96 <strnlen_P+0x2>
     ea0:	80 95       	com	r24
     ea2:	90 95       	com	r25
     ea4:	8e 0f       	add	r24, r30
     ea6:	9f 1f       	adc	r25, r31
     ea8:	08 95       	ret

00000eaa <strnlen>:
     eaa:	fc 01       	movw	r30, r24
     eac:	61 50       	subi	r22, 0x01	; 1
     eae:	70 40       	sbci	r23, 0x00	; 0
     eb0:	01 90       	ld	r0, Z+
     eb2:	01 10       	cpse	r0, r1
     eb4:	d8 f7       	brcc	.-10     	; 0xeac <strnlen+0x2>
     eb6:	80 95       	com	r24
     eb8:	90 95       	com	r25
     eba:	8e 0f       	add	r24, r30
     ebc:	9f 1f       	adc	r25, r31
     ebe:	08 95       	ret

00000ec0 <fputc>:
     ec0:	0f 93       	push	r16
     ec2:	1f 93       	push	r17
     ec4:	cf 93       	push	r28
     ec6:	df 93       	push	r29
     ec8:	fb 01       	movw	r30, r22
     eca:	23 81       	ldd	r18, Z+3	; 0x03
     ecc:	21 fd       	sbrc	r18, 1
     ece:	03 c0       	rjmp	.+6      	; 0xed6 <fputc+0x16>
     ed0:	8f ef       	ldi	r24, 0xFF	; 255
     ed2:	9f ef       	ldi	r25, 0xFF	; 255
     ed4:	2c c0       	rjmp	.+88     	; 0xf2e <fputc+0x6e>
     ed6:	22 ff       	sbrs	r18, 2
     ed8:	16 c0       	rjmp	.+44     	; 0xf06 <fputc+0x46>
     eda:	46 81       	ldd	r20, Z+6	; 0x06
     edc:	57 81       	ldd	r21, Z+7	; 0x07
     ede:	24 81       	ldd	r18, Z+4	; 0x04
     ee0:	35 81       	ldd	r19, Z+5	; 0x05
     ee2:	42 17       	cp	r20, r18
     ee4:	53 07       	cpc	r21, r19
     ee6:	44 f4       	brge	.+16     	; 0xef8 <fputc+0x38>
     ee8:	a0 81       	ld	r26, Z
     eea:	b1 81       	ldd	r27, Z+1	; 0x01
     eec:	9d 01       	movw	r18, r26
     eee:	2f 5f       	subi	r18, 0xFF	; 255
     ef0:	3f 4f       	sbci	r19, 0xFF	; 255
     ef2:	31 83       	std	Z+1, r19	; 0x01
     ef4:	20 83       	st	Z, r18
     ef6:	8c 93       	st	X, r24
     ef8:	26 81       	ldd	r18, Z+6	; 0x06
     efa:	37 81       	ldd	r19, Z+7	; 0x07
     efc:	2f 5f       	subi	r18, 0xFF	; 255
     efe:	3f 4f       	sbci	r19, 0xFF	; 255
     f00:	37 83       	std	Z+7, r19	; 0x07
     f02:	26 83       	std	Z+6, r18	; 0x06
     f04:	14 c0       	rjmp	.+40     	; 0xf2e <fputc+0x6e>
     f06:	8b 01       	movw	r16, r22
     f08:	ec 01       	movw	r28, r24
     f0a:	fb 01       	movw	r30, r22
     f0c:	00 84       	ldd	r0, Z+8	; 0x08
     f0e:	f1 85       	ldd	r31, Z+9	; 0x09
     f10:	e0 2d       	mov	r30, r0
     f12:	09 95       	icall
     f14:	89 2b       	or	r24, r25
     f16:	e1 f6       	brne	.-72     	; 0xed0 <fputc+0x10>
     f18:	d8 01       	movw	r26, r16
     f1a:	16 96       	adiw	r26, 0x06	; 6
     f1c:	8d 91       	ld	r24, X+
     f1e:	9c 91       	ld	r25, X
     f20:	17 97       	sbiw	r26, 0x07	; 7
     f22:	01 96       	adiw	r24, 0x01	; 1
     f24:	17 96       	adiw	r26, 0x07	; 7
     f26:	9c 93       	st	X, r25
     f28:	8e 93       	st	-X, r24
     f2a:	16 97       	sbiw	r26, 0x06	; 6
     f2c:	ce 01       	movw	r24, r28
     f2e:	df 91       	pop	r29
     f30:	cf 91       	pop	r28
     f32:	1f 91       	pop	r17
     f34:	0f 91       	pop	r16
     f36:	08 95       	ret

00000f38 <__ultoa_invert>:
     f38:	fa 01       	movw	r30, r20
     f3a:	aa 27       	eor	r26, r26
     f3c:	28 30       	cpi	r18, 0x08	; 8
     f3e:	51 f1       	breq	.+84     	; 0xf94 <__ultoa_invert+0x5c>
     f40:	20 31       	cpi	r18, 0x10	; 16
     f42:	81 f1       	breq	.+96     	; 0xfa4 <__ultoa_invert+0x6c>
     f44:	e8 94       	clt
     f46:	6f 93       	push	r22
     f48:	6e 7f       	andi	r22, 0xFE	; 254
     f4a:	6e 5f       	subi	r22, 0xFE	; 254
     f4c:	7f 4f       	sbci	r23, 0xFF	; 255
     f4e:	8f 4f       	sbci	r24, 0xFF	; 255
     f50:	9f 4f       	sbci	r25, 0xFF	; 255
     f52:	af 4f       	sbci	r26, 0xFF	; 255
     f54:	b1 e0       	ldi	r27, 0x01	; 1
     f56:	3e d0       	rcall	.+124    	; 0xfd4 <__ultoa_invert+0x9c>
     f58:	b4 e0       	ldi	r27, 0x04	; 4
     f5a:	3c d0       	rcall	.+120    	; 0xfd4 <__ultoa_invert+0x9c>
     f5c:	67 0f       	add	r22, r23
     f5e:	78 1f       	adc	r23, r24
     f60:	89 1f       	adc	r24, r25
     f62:	9a 1f       	adc	r25, r26
     f64:	a1 1d       	adc	r26, r1
     f66:	68 0f       	add	r22, r24
     f68:	79 1f       	adc	r23, r25
     f6a:	8a 1f       	adc	r24, r26
     f6c:	91 1d       	adc	r25, r1
     f6e:	a1 1d       	adc	r26, r1
     f70:	6a 0f       	add	r22, r26
     f72:	71 1d       	adc	r23, r1
     f74:	81 1d       	adc	r24, r1
     f76:	91 1d       	adc	r25, r1
     f78:	a1 1d       	adc	r26, r1
     f7a:	20 d0       	rcall	.+64     	; 0xfbc <__ultoa_invert+0x84>
     f7c:	09 f4       	brne	.+2      	; 0xf80 <__ultoa_invert+0x48>
     f7e:	68 94       	set
     f80:	3f 91       	pop	r19
     f82:	2a e0       	ldi	r18, 0x0A	; 10
     f84:	26 9f       	mul	r18, r22
     f86:	11 24       	eor	r1, r1
     f88:	30 19       	sub	r19, r0
     f8a:	30 5d       	subi	r19, 0xD0	; 208
     f8c:	31 93       	st	Z+, r19
     f8e:	de f6       	brtc	.-74     	; 0xf46 <__ultoa_invert+0xe>
     f90:	cf 01       	movw	r24, r30
     f92:	08 95       	ret
     f94:	46 2f       	mov	r20, r22
     f96:	47 70       	andi	r20, 0x07	; 7
     f98:	40 5d       	subi	r20, 0xD0	; 208
     f9a:	41 93       	st	Z+, r20
     f9c:	b3 e0       	ldi	r27, 0x03	; 3
     f9e:	0f d0       	rcall	.+30     	; 0xfbe <__ultoa_invert+0x86>
     fa0:	c9 f7       	brne	.-14     	; 0xf94 <__ultoa_invert+0x5c>
     fa2:	f6 cf       	rjmp	.-20     	; 0xf90 <__ultoa_invert+0x58>
     fa4:	46 2f       	mov	r20, r22
     fa6:	4f 70       	andi	r20, 0x0F	; 15
     fa8:	40 5d       	subi	r20, 0xD0	; 208
     faa:	4a 33       	cpi	r20, 0x3A	; 58
     fac:	18 f0       	brcs	.+6      	; 0xfb4 <__ultoa_invert+0x7c>
     fae:	49 5d       	subi	r20, 0xD9	; 217
     fb0:	31 fd       	sbrc	r19, 1
     fb2:	40 52       	subi	r20, 0x20	; 32
     fb4:	41 93       	st	Z+, r20
     fb6:	02 d0       	rcall	.+4      	; 0xfbc <__ultoa_invert+0x84>
     fb8:	a9 f7       	brne	.-22     	; 0xfa4 <__ultoa_invert+0x6c>
     fba:	ea cf       	rjmp	.-44     	; 0xf90 <__ultoa_invert+0x58>
     fbc:	b4 e0       	ldi	r27, 0x04	; 4
     fbe:	a6 95       	lsr	r26
     fc0:	97 95       	ror	r25
     fc2:	87 95       	ror	r24
     fc4:	77 95       	ror	r23
     fc6:	67 95       	ror	r22
     fc8:	ba 95       	dec	r27
     fca:	c9 f7       	brne	.-14     	; 0xfbe <__ultoa_invert+0x86>
     fcc:	00 97       	sbiw	r24, 0x00	; 0
     fce:	61 05       	cpc	r22, r1
     fd0:	71 05       	cpc	r23, r1
     fd2:	08 95       	ret
     fd4:	9b 01       	movw	r18, r22
     fd6:	ac 01       	movw	r20, r24
     fd8:	0a 2e       	mov	r0, r26
     fda:	06 94       	lsr	r0
     fdc:	57 95       	ror	r21
     fde:	47 95       	ror	r20
     fe0:	37 95       	ror	r19
     fe2:	27 95       	ror	r18
     fe4:	ba 95       	dec	r27
     fe6:	c9 f7       	brne	.-14     	; 0xfda <__ultoa_invert+0xa2>
     fe8:	62 0f       	add	r22, r18
     fea:	73 1f       	adc	r23, r19
     fec:	84 1f       	adc	r24, r20
     fee:	95 1f       	adc	r25, r21
     ff0:	a0 1d       	adc	r26, r0
     ff2:	08 95       	ret

00000ff4 <__prologue_saves__>:
     ff4:	2f 92       	push	r2
     ff6:	3f 92       	push	r3
     ff8:	4f 92       	push	r4
     ffa:	5f 92       	push	r5
     ffc:	6f 92       	push	r6
     ffe:	7f 92       	push	r7
    1000:	8f 92       	push	r8
    1002:	9f 92       	push	r9
    1004:	af 92       	push	r10
    1006:	bf 92       	push	r11
    1008:	cf 92       	push	r12
    100a:	df 92       	push	r13
    100c:	ef 92       	push	r14
    100e:	ff 92       	push	r15
    1010:	0f 93       	push	r16
    1012:	1f 93       	push	r17
    1014:	cf 93       	push	r28
    1016:	df 93       	push	r29
    1018:	cd b7       	in	r28, 0x3d	; 61
    101a:	de b7       	in	r29, 0x3e	; 62
    101c:	ca 1b       	sub	r28, r26
    101e:	db 0b       	sbc	r29, r27
    1020:	0f b6       	in	r0, 0x3f	; 63
    1022:	f8 94       	cli
    1024:	de bf       	out	0x3e, r29	; 62
    1026:	0f be       	out	0x3f, r0	; 63
    1028:	cd bf       	out	0x3d, r28	; 61
    102a:	09 94       	ijmp

0000102c <__epilogue_restores__>:
    102c:	2a 88       	ldd	r2, Y+18	; 0x12
    102e:	39 88       	ldd	r3, Y+17	; 0x11
    1030:	48 88       	ldd	r4, Y+16	; 0x10
    1032:	5f 84       	ldd	r5, Y+15	; 0x0f
    1034:	6e 84       	ldd	r6, Y+14	; 0x0e
    1036:	7d 84       	ldd	r7, Y+13	; 0x0d
    1038:	8c 84       	ldd	r8, Y+12	; 0x0c
    103a:	9b 84       	ldd	r9, Y+11	; 0x0b
    103c:	aa 84       	ldd	r10, Y+10	; 0x0a
    103e:	b9 84       	ldd	r11, Y+9	; 0x09
    1040:	c8 84       	ldd	r12, Y+8	; 0x08
    1042:	df 80       	ldd	r13, Y+7	; 0x07
    1044:	ee 80       	ldd	r14, Y+6	; 0x06
    1046:	fd 80       	ldd	r15, Y+5	; 0x05
    1048:	0c 81       	ldd	r16, Y+4	; 0x04
    104a:	1b 81       	ldd	r17, Y+3	; 0x03
    104c:	aa 81       	ldd	r26, Y+2	; 0x02
    104e:	b9 81       	ldd	r27, Y+1	; 0x01
    1050:	ce 0f       	add	r28, r30
    1052:	d1 1d       	adc	r29, r1
    1054:	0f b6       	in	r0, 0x3f	; 63
    1056:	f8 94       	cli
    1058:	de bf       	out	0x3e, r29	; 62
    105a:	0f be       	out	0x3f, r0	; 63
    105c:	cd bf       	out	0x3d, r28	; 61
    105e:	ed 01       	movw	r28, r26
    1060:	08 95       	ret

00001062 <_exit>:
    1062:	f8 94       	cli

00001064 <__stop_program>:
    1064:	ff cf       	rjmp	.-2      	; 0x1064 <__stop_program>
